{"version":3,"sources":["webpack:///polyfills.js","webpack:///webpack/bootstrap 0f7006ff96cfae6a69ab","webpack:///./example/polyfills.ts","webpack:///./~/reflect-metadata/Reflect.js","webpack:///./~/zone.js/dist/zone.js","webpack:///./~/process/browser.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","1","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","appendChild","m","c","0","33","global","Reflect","decorate","decorators","target","targetKey","targetDescriptor","IsUndefined","IsArray","TypeError","IsConstructor","DecorateConstructor","IsObject","IsNull","ToPropertyKey","DecorateProperty","metadata","metadataKey","metadataValue","decorator","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","metadataMap","GetOrCreateMetadataMap","delete","size","targetMetadata","Metadata","get","decorated","propertyKey","descriptor","O","P","Create","_Map","set","MetadataKey","hasOwn","parent","OrdinaryGetPrototypeOf","ToBoolean","has","MetadataValue","ownKeys","parentKeys","_Set","keys","_i","ownKeys_1","key","hasKey","add","_a","parentKeys_1","keysObj","iterator","GetIterator","next","IteratorStep","nextValue","IteratorValue","IteratorClose","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","toPrimitiveSymbol","result","OrdinaryToPrimitive","toString_1","toString","IsCallable","valueOf","toString_2","argument","ToString","Array","isArray","Object","prototype","V","func","obj","method","iteratorSymbol","iterResult","value","done","f","proto","getPrototypeOf","functionPrototype","prototypeProto","constructor","CreateMapPolyfill","getKey","_","getValue","getEntry","cacheSentinel","arraySentinel","MapIterator","values","selector","this","_index","_keys","_values","_selector","index","throw","error","return","Map","_cacheKey","_cacheIndex","defineProperty","enumerable","configurable","_find","clear","entries","insert","indexOf","CreateSetPolyfill","Set","_map","CreateWeakMapPolyfill","CreateUniqueKey","CreateUUID","HashMap","GetOrCreateWeakMapTable","create","rootKey","createDictionary","FillRandomBytes","buffer","Math","random","GenRandomBytes","Uint8Array","crypto","getRandomValues","msCrypto","data","UUID_SIZE","offset","byte","toLowerCase","WeakMap","_key","table","MakeDictionary","__","hasOwnProperty","supportsCreate","supportsProto","__proto__","supportsSymbol","Symbol","toPrimitive","downLevel","map","Function","_WeakMap","__global","self","34","process","factory","bindArguments","args","source","Zone","current","wrap","patchPrototype","fnNames","_loop_1","name_1","delegate","arguments","patchProperty","prop","desc","getOwnPropertyDescriptor","writable","eventName","substr","_prop","fn","removeEventListener","wrapFn","event","preventDefault","addEventListener","patchOnProperties","properties","onProperties","j","findExistingRegisteredTask","handler","name","capture","remove","eventTasks","EVENT_TASKS","eventTask","useCapturing","splice","attachRegisteredEvent","makeZoneAwareAddListener","addFnName","removeFnName","useCapturingParam","allowDuplicates","scheduleEventListener","meta","addFnSymbol","invoke","cancelEventListener","removeFnSymbol","zoneSymbol","defaultUseCapturing","_global$1","handleEvent","validZoneHandler","zone","scheduleEventTask","makeZoneAwareRemoveListener","fnName","symbol","cancelTask","patchEventTargetMethods","patchMethod","ADD_EVENT_LISTENER","zoneAwareAddEventListener","REMOVE_EVENT_LISTENER","zoneAwareRemoveEventListener","patchClass","className","OriginalClass","a","originalInstanceKey","Error","instance","createNamedFn","patchFn","getOwnPropertyNames","delegateName","patchTimer","setName","cancelName","nameSuffix","scheduleTask","task","tasksByHandleId","handleId","setNative","clearTask","clearNative","options","isPeriodic","delay","scheduleMacroTask","handle","ref","unref","bind","cancelFn","runCount","propertyPatch","isUnconfigurable","originalConfigurableFlag","rewriteDescriptor","_tryDefineProperty","defineProperties","props","forEach","isFrozen","_create","_getOwnPropertyDescriptor","_redefineProperty","unconfigurablesKey","_defineProperty","descJson","JSON","stringify","console","log","eventTargetPatch","_global","apis","isWtf","WTF_ISSUE_555","split","v","concat","NO_EVENT_TARGET","EVENT_TARGET","WS","WebSocket","EventTarget","b","proxySocket","socket","onmessageDesc","propName","propertyDescriptorPatch","isNode","supportsWebSocket","canPatchViaPropertyDescriptor","isBrowser","HTMLElement","eventNames","XMLHttpRequest","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","patchViaCapturingAllTheEvents","Element","req","onreadystatechange","property","onproperty","bound","elt","unboundKey","parentElement","registerElementPatch","_registerElement","registerElement","opts","patchXHR","findPendingTask","pendingTask","XHR_TASK","readyState","DONE","aborted","storedTask","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","__symbol__","scheduleQueueDrain","_numberOfNestedTaskFrames","_microTaskQueue","symbolPromise","resolve","symbolThen","drainMicroTaskQueue","symbolSetTimeout","scheduleMicroTask","consoleError","rejection","message","stack","_isDrainingMicrotaskQueue","queue","runTask","_uncaughtPromiseErrors","uncaughtPromiseError","runGuarded","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","makeResolver","promise","state","resolvePromise","symbolState","UNRESOLVED","clearRejectedNoCatch","symbolValue","scheduleResolveOrReject","REJECTED","REJECTED_NO_CATCH","error_1","currentTask","chainPromise","onFulfilled","onRejected","run","patchThen","NativePromise","NativePromiseProtototype","NativePromiseThen","onResolve","onReject","nativePromise","zoneSpec","_properties","_parent","_name","_zoneDelegate","ZoneDelegate","assertZonePatched","Promise","_currentZone","_currentTask","getZoneWith","fork","_callback","intercept","applyThis","applyArgs","oldZone","handleError","previousTask","invokeTask","customSchedule","ZoneTask","customCancel","parentDelegate","_taskCounts","microTask","macroTask","_parentDelegate","_forkZS","onFork","_forkDlgt","_interceptZS","onIntercept","_interceptDlgt","_invokeZS","onInvoke","_invokeDlgt","_handleErrorZS","onHandleError","_handleErrorDlgt","_scheduleTaskZS","onScheduleTask","_scheduleTaskDlgt","_invokeTaskZS","onInvokeTask","_invokeTaskDlgt","_cancelTaskZS","onCancelTask","_cancelTaskDlgt","_hasTaskZS","onHasTask","_hasTaskDlgt","targetZone","scheduleFn","_updateTaskCount","hasTask","isEmpty","count","counts","prev","change","RESOLVED","executor","race","res","rej","values_1","all","resolvedValues","values_2","catch","fetchPromise","isWebWorker","WorkerGlobalScope","blockingMethods","s","geolocation","35","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","len","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"polyfills.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/ \t\tif(moreModules[0]) {\n/******/ \t\t\tinstalledModules[0] = 0;\n/******/ \t\t\treturn __webpack_require__(0);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t1:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".bundle.js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/angular2-ui-switch/example/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t__webpack_require__(33);\r\n\t__webpack_require__(34);\r\n\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*! *****************************************************************************\r\n\tCopyright (C) Microsoft. All rights reserved.\r\n\tLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n\tthis file except in compliance with the License. You may obtain a copy of the\r\n\tLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\t\r\n\tTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n\tKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n\tWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n\tMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\t\r\n\tSee the Apache Version 2.0 License for specific language governing permissions\r\n\tand limitations under the License.\r\n\t***************************************************************************** */\r\n\tvar Reflect;\r\n\t(function (Reflect) {\r\n\t    \"use strict\";\r\n\t    var hasOwn = Object.prototype.hasOwnProperty;\r\n\t    // feature test for Object.create support\r\n\t    var supportsCreate = typeof Object.create === \"function\";\r\n\t    // feature test for __proto__ support\r\n\t    var supportsProto = { __proto__: [] } instanceof Array;\r\n\t    // feature test for Symbol support\r\n\t    var supportsSymbol = typeof Symbol === \"function\";\r\n\t    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n\t    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n\t    // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n\t    var createDictionary = supportsCreate ? function () { return MakeDictionary(Object.create(null)); } :\r\n\t        supportsProto ? function () { return MakeDictionary({ __proto__: null }); } :\r\n\t            function () { return MakeDictionary({}); };\r\n\t    var HashMap;\r\n\t    (function (HashMap) {\r\n\t        var downLevel = !supportsCreate && !supportsProto;\r\n\t        HashMap.has = downLevel\r\n\t            ? function (map, key) { return hasOwn.call(map, key); }\r\n\t            : function (map, key) { return key in map; };\r\n\t        HashMap.get = downLevel\r\n\t            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n\t            : function (map, key) { return map[key]; };\r\n\t    })(HashMap || (HashMap = {}));\r\n\t    // Load global or shim versions of Map, Set, and WeakMap\r\n\t    var functionPrototype = Object.getPrototypeOf(Function);\r\n\t    var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n\t    var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n\t    var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n\t    // [[Metadata]] internal slot\r\n\t    var Metadata = new _WeakMap();\r\n\t    /**\r\n\t      * Applies a set of decorators to a property of a target object.\r\n\t      * @param decorators An array of decorators.\r\n\t      * @param target The target object.\r\n\t      * @param targetKey (Optional) The property key to decorate.\r\n\t      * @param targetDescriptor (Optional) The property descriptor for the target key\r\n\t      * @remarks Decorators are applied in reverse order.\r\n\t      * @example\r\n\t      *\r\n\t      *     class Example {\r\n\t      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n\t      *         // static staticProperty;\r\n\t      *         // property;\r\n\t      *\r\n\t      *         constructor(p) { }\r\n\t      *         static staticMethod(p) { }\r\n\t      *         method(p) { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n\t      *\r\n\t      *     // property (on constructor)\r\n\t      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n\t      *\r\n\t      *     // property (on prototype)\r\n\t      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     Object.defineProperty(Example, \"staticMethod\",\r\n\t      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n\t      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     Object.defineProperty(Example.prototype, \"method\",\r\n\t      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n\t      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n\t      *\r\n\t      */\r\n\t    function decorate(decorators, target, targetKey, targetDescriptor) {\r\n\t        if (!IsUndefined(targetKey)) {\r\n\t            if (!IsArray(decorators))\r\n\t                throw new TypeError();\r\n\t            if (!IsObject(target))\r\n\t                throw new TypeError();\r\n\t            if (!IsObject(targetDescriptor) && !IsUndefined(targetDescriptor) && !IsNull(targetDescriptor))\r\n\t                throw new TypeError();\r\n\t            if (IsNull(targetDescriptor))\r\n\t                targetDescriptor = undefined;\r\n\t            targetKey = ToPropertyKey(targetKey);\r\n\t            return DecorateProperty(decorators, target, targetKey, targetDescriptor);\r\n\t        }\r\n\t        else {\r\n\t            if (!IsArray(decorators))\r\n\t                throw new TypeError();\r\n\t            if (!IsConstructor(target))\r\n\t                throw new TypeError();\r\n\t            return DecorateConstructor(decorators, target);\r\n\t        }\r\n\t    }\r\n\t    Reflect.decorate = decorate;\r\n\t    /**\r\n\t      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n\t      * @param metadataKey The key for the metadata entry.\r\n\t      * @param metadataValue The value for the metadata entry.\r\n\t      * @returns A decorator function.\r\n\t      * @remarks\r\n\t      * If `metadataKey` is already defined for the target and target key, the\r\n\t      * metadataValue for that key will be overwritten.\r\n\t      * @example\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     @Reflect.metadata(key, value)\r\n\t      *     class Example {\r\n\t      *     }\r\n\t      *\r\n\t      *     // property (on constructor, TypeScript only)\r\n\t      *     class Example {\r\n\t      *         @Reflect.metadata(key, value)\r\n\t      *         static staticProperty;\r\n\t      *     }\r\n\t      *\r\n\t      *     // property (on prototype, TypeScript only)\r\n\t      *     class Example {\r\n\t      *         @Reflect.metadata(key, value)\r\n\t      *         property;\r\n\t      *     }\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     class Example {\r\n\t      *         @Reflect.metadata(key, value)\r\n\t      *         static staticMethod() { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     class Example {\r\n\t      *         @Reflect.metadata(key, value)\r\n\t      *         method() { }\r\n\t      *     }\r\n\t      *\r\n\t      */\r\n\t    function metadata(metadataKey, metadataValue) {\r\n\t        function decorator(target, targetKey) {\r\n\t            if (!IsUndefined(targetKey)) {\r\n\t                if (!IsObject(target))\r\n\t                    throw new TypeError();\r\n\t                targetKey = ToPropertyKey(targetKey);\r\n\t                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\r\n\t            }\r\n\t            else {\r\n\t                if (!IsConstructor(target))\r\n\t                    throw new TypeError();\r\n\t                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, /*targetKey*/ undefined);\r\n\t            }\r\n\t        }\r\n\t        return decorator;\r\n\t    }\r\n\t    Reflect.metadata = metadata;\r\n\t    /**\r\n\t      * Define a unique metadata entry on the target.\r\n\t      * @param metadataKey A key used to store and retrieve metadata.\r\n\t      * @param metadataValue A value that contains attached metadata.\r\n\t      * @param target The target object on which to define metadata.\r\n\t      * @param targetKey (Optional) The property key for the target.\r\n\t      * @example\r\n\t      *\r\n\t      *     class Example {\r\n\t      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n\t      *         // static staticProperty;\r\n\t      *         // property;\r\n\t      *\r\n\t      *         constructor(p) { }\r\n\t      *         static staticMethod(p) { }\r\n\t      *         method(p) { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n\t      *\r\n\t      *     // property (on constructor)\r\n\t      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n\t      *\r\n\t      *     // property (on prototype)\r\n\t      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n\t      *\r\n\t      *     // decorator factory as metadata-producing annotation.\r\n\t      *     function MyAnnotation(options): Decorator {\r\n\t      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n\t      *     }\r\n\t      *\r\n\t      */\r\n\t    function defineMetadata(metadataKey, metadataValue, target, targetKey) {\r\n\t        if (!IsObject(target))\r\n\t            throw new TypeError();\r\n\t        if (!IsUndefined(targetKey))\r\n\t            targetKey = ToPropertyKey(targetKey);\r\n\t        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\r\n\t    }\r\n\t    Reflect.defineMetadata = defineMetadata;\r\n\t    /**\r\n\t      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n\t      * @param metadataKey A key used to store and retrieve metadata.\r\n\t      * @param target The target object on which the metadata is defined.\r\n\t      * @param targetKey (Optional) The property key for the target.\r\n\t      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n\t      * @example\r\n\t      *\r\n\t      *     class Example {\r\n\t      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n\t      *         // static staticProperty;\r\n\t      *         // property;\r\n\t      *\r\n\t      *         constructor(p) { }\r\n\t      *         static staticMethod(p) { }\r\n\t      *         method(p) { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n\t      *\r\n\t      *     // property (on constructor)\r\n\t      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n\t      *\r\n\t      *     // property (on prototype)\r\n\t      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n\t      *\r\n\t      */\r\n\t    function hasMetadata(metadataKey, target, targetKey) {\r\n\t        if (!IsObject(target))\r\n\t            throw new TypeError();\r\n\t        if (!IsUndefined(targetKey))\r\n\t            targetKey = ToPropertyKey(targetKey);\r\n\t        return OrdinaryHasMetadata(metadataKey, target, targetKey);\r\n\t    }\r\n\t    Reflect.hasMetadata = hasMetadata;\r\n\t    /**\r\n\t      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n\t      * @param metadataKey A key used to store and retrieve metadata.\r\n\t      * @param target The target object on which the metadata is defined.\r\n\t      * @param targetKey (Optional) The property key for the target.\r\n\t      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n\t      * @example\r\n\t      *\r\n\t      *     class Example {\r\n\t      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n\t      *         // static staticProperty;\r\n\t      *         // property;\r\n\t      *\r\n\t      *         constructor(p) { }\r\n\t      *         static staticMethod(p) { }\r\n\t      *         method(p) { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n\t      *\r\n\t      *     // property (on constructor)\r\n\t      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n\t      *\r\n\t      *     // property (on prototype)\r\n\t      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n\t      *\r\n\t      */\r\n\t    function hasOwnMetadata(metadataKey, target, targetKey) {\r\n\t        if (!IsObject(target))\r\n\t            throw new TypeError();\r\n\t        if (!IsUndefined(targetKey))\r\n\t            targetKey = ToPropertyKey(targetKey);\r\n\t        return OrdinaryHasOwnMetadata(metadataKey, target, targetKey);\r\n\t    }\r\n\t    Reflect.hasOwnMetadata = hasOwnMetadata;\r\n\t    /**\r\n\t      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n\t      * @param metadataKey A key used to store and retrieve metadata.\r\n\t      * @param target The target object on which the metadata is defined.\r\n\t      * @param targetKey (Optional) The property key for the target.\r\n\t      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n\t      * @example\r\n\t      *\r\n\t      *     class Example {\r\n\t      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n\t      *         // static staticProperty;\r\n\t      *         // property;\r\n\t      *\r\n\t      *         constructor(p) { }\r\n\t      *         static staticMethod(p) { }\r\n\t      *         method(p) { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n\t      *\r\n\t      *     // property (on constructor)\r\n\t      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n\t      *\r\n\t      *     // property (on prototype)\r\n\t      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n\t      *\r\n\t      */\r\n\t    function getMetadata(metadataKey, target, targetKey) {\r\n\t        if (!IsObject(target))\r\n\t            throw new TypeError();\r\n\t        if (!IsUndefined(targetKey))\r\n\t            targetKey = ToPropertyKey(targetKey);\r\n\t        return OrdinaryGetMetadata(metadataKey, target, targetKey);\r\n\t    }\r\n\t    Reflect.getMetadata = getMetadata;\r\n\t    /**\r\n\t      * Gets the metadata value for the provided metadata key on the target object.\r\n\t      * @param metadataKey A key used to store and retrieve metadata.\r\n\t      * @param target The target object on which the metadata is defined.\r\n\t      * @param targetKey (Optional) The property key for the target.\r\n\t      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n\t      * @example\r\n\t      *\r\n\t      *     class Example {\r\n\t      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n\t      *         // static staticProperty;\r\n\t      *         // property;\r\n\t      *\r\n\t      *         constructor(p) { }\r\n\t      *         static staticMethod(p) { }\r\n\t      *         method(p) { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n\t      *\r\n\t      *     // property (on constructor)\r\n\t      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n\t      *\r\n\t      *     // property (on prototype)\r\n\t      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n\t      *\r\n\t      */\r\n\t    function getOwnMetadata(metadataKey, target, targetKey) {\r\n\t        if (!IsObject(target))\r\n\t            throw new TypeError();\r\n\t        if (!IsUndefined(targetKey))\r\n\t            targetKey = ToPropertyKey(targetKey);\r\n\t        return OrdinaryGetOwnMetadata(metadataKey, target, targetKey);\r\n\t    }\r\n\t    Reflect.getOwnMetadata = getOwnMetadata;\r\n\t    /**\r\n\t      * Gets the metadata keys defined on the target object or its prototype chain.\r\n\t      * @param target The target object on which the metadata is defined.\r\n\t      * @param targetKey (Optional) The property key for the target.\r\n\t      * @returns An array of unique metadata keys.\r\n\t      * @example\r\n\t      *\r\n\t      *     class Example {\r\n\t      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n\t      *         // static staticProperty;\r\n\t      *         // property;\r\n\t      *\r\n\t      *         constructor(p) { }\r\n\t      *         static staticMethod(p) { }\r\n\t      *         method(p) { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     result = Reflect.getMetadataKeys(Example);\r\n\t      *\r\n\t      *     // property (on constructor)\r\n\t      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n\t      *\r\n\t      *     // property (on prototype)\r\n\t      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n\t      *\r\n\t      */\r\n\t    function getMetadataKeys(target, targetKey) {\r\n\t        if (!IsObject(target))\r\n\t            throw new TypeError();\r\n\t        if (!IsUndefined(targetKey))\r\n\t            targetKey = ToPropertyKey(targetKey);\r\n\t        return OrdinaryMetadataKeys(target, targetKey);\r\n\t    }\r\n\t    Reflect.getMetadataKeys = getMetadataKeys;\r\n\t    /**\r\n\t      * Gets the unique metadata keys defined on the target object.\r\n\t      * @param target The target object on which the metadata is defined.\r\n\t      * @param targetKey (Optional) The property key for the target.\r\n\t      * @returns An array of unique metadata keys.\r\n\t      * @example\r\n\t      *\r\n\t      *     class Example {\r\n\t      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n\t      *         // static staticProperty;\r\n\t      *         // property;\r\n\t      *\r\n\t      *         constructor(p) { }\r\n\t      *         static staticMethod(p) { }\r\n\t      *         method(p) { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     result = Reflect.getOwnMetadataKeys(Example);\r\n\t      *\r\n\t      *     // property (on constructor)\r\n\t      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n\t      *\r\n\t      *     // property (on prototype)\r\n\t      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n\t      *\r\n\t      */\r\n\t    function getOwnMetadataKeys(target, targetKey) {\r\n\t        if (!IsObject(target))\r\n\t            throw new TypeError();\r\n\t        if (!IsUndefined(targetKey))\r\n\t            targetKey = ToPropertyKey(targetKey);\r\n\t        return OrdinaryOwnMetadataKeys(target, targetKey);\r\n\t    }\r\n\t    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\r\n\t    /**\r\n\t      * Deletes the metadata entry from the target object with the provided key.\r\n\t      * @param metadataKey A key used to store and retrieve metadata.\r\n\t      * @param target The target object on which the metadata is defined.\r\n\t      * @param targetKey (Optional) The property key for the target.\r\n\t      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n\t      * @example\r\n\t      *\r\n\t      *     class Example {\r\n\t      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n\t      *         // static staticProperty;\r\n\t      *         // property;\r\n\t      *\r\n\t      *         constructor(p) { }\r\n\t      *         static staticMethod(p) { }\r\n\t      *         method(p) { }\r\n\t      *     }\r\n\t      *\r\n\t      *     // constructor\r\n\t      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n\t      *\r\n\t      *     // property (on constructor)\r\n\t      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n\t      *\r\n\t      *     // property (on prototype)\r\n\t      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n\t      *\r\n\t      *     // method (on constructor)\r\n\t      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n\t      *\r\n\t      *     // method (on prototype)\r\n\t      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n\t      *\r\n\t      */\r\n\t    function deleteMetadata(metadataKey, target, targetKey) {\r\n\t        // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#deletemetadata-metadatakey-p-\r\n\t        if (!IsObject(target))\r\n\t            throw new TypeError();\r\n\t        if (!IsUndefined(targetKey))\r\n\t            targetKey = ToPropertyKey(targetKey);\r\n\t        var metadataMap = GetOrCreateMetadataMap(target, targetKey, /*create*/ false);\r\n\t        if (IsUndefined(metadataMap))\r\n\t            return false;\r\n\t        if (!metadataMap.delete(metadataKey))\r\n\t            return false;\r\n\t        if (metadataMap.size > 0)\r\n\t            return true;\r\n\t        var targetMetadata = Metadata.get(target);\r\n\t        targetMetadata.delete(targetKey);\r\n\t        if (targetMetadata.size > 0)\r\n\t            return true;\r\n\t        Metadata.delete(target);\r\n\t        return true;\r\n\t    }\r\n\t    Reflect.deleteMetadata = deleteMetadata;\r\n\t    function DecorateConstructor(decorators, target) {\r\n\t        for (var i = decorators.length - 1; i >= 0; --i) {\r\n\t            var decorator = decorators[i];\r\n\t            var decorated = decorator(target);\r\n\t            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n\t                if (!IsConstructor(decorated))\r\n\t                    throw new TypeError();\r\n\t                target = decorated;\r\n\t            }\r\n\t        }\r\n\t        return target;\r\n\t    }\r\n\t    function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n\t        for (var i = decorators.length - 1; i >= 0; --i) {\r\n\t            var decorator = decorators[i];\r\n\t            var decorated = decorator(target, propertyKey, descriptor);\r\n\t            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n\t                if (!IsObject(decorated))\r\n\t                    throw new TypeError();\r\n\t                descriptor = decorated;\r\n\t            }\r\n\t        }\r\n\t        return descriptor;\r\n\t    }\r\n\t    function GetOrCreateMetadataMap(O, P, Create) {\r\n\t        var targetMetadata = Metadata.get(O);\r\n\t        if (IsUndefined(targetMetadata)) {\r\n\t            if (!Create)\r\n\t                return undefined;\r\n\t            targetMetadata = new _Map();\r\n\t            Metadata.set(O, targetMetadata);\r\n\t        }\r\n\t        var metadataMap = targetMetadata.get(P);\r\n\t        if (IsUndefined(metadataMap)) {\r\n\t            if (!Create)\r\n\t                return undefined;\r\n\t            metadataMap = new _Map();\r\n\t            targetMetadata.set(P, metadataMap);\r\n\t        }\r\n\t        return metadataMap;\r\n\t    }\r\n\t    // Ordinary Object Internal Methods and Internal Slots\r\n\t    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinary-object-internal-methods-and-internal-slots\r\n\t    // OrdinaryHasMetadata(MetadataKey, O, P)\r\n\t    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinaryhasmetadata--metadatakey-o-p-\r\n\t    function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n\t        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n\t        if (hasOwn)\r\n\t            return true;\r\n\t        var parent = OrdinaryGetPrototypeOf(O);\r\n\t        if (!IsNull(parent))\r\n\t            return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n\t        return false;\r\n\t    }\r\n\t    // OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n\t    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinaryhasownmetadata--metadatakey-o-p-\r\n\t    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n\t        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);\r\n\t        if (IsUndefined(metadataMap))\r\n\t            return false;\r\n\t        return ToBoolean(metadataMap.has(MetadataKey));\r\n\t    }\r\n\t    // OrdinaryGetMetadata(MetadataKey, O, P)\r\n\t    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarygetmetadata--metadatakey-o-p-\r\n\t    function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n\t        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n\t        if (hasOwn)\r\n\t            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n\t        var parent = OrdinaryGetPrototypeOf(O);\r\n\t        if (!IsNull(parent))\r\n\t            return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n\t        return undefined;\r\n\t    }\r\n\t    // OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n\t    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarygetownmetadata--metadatakey-o-p-\r\n\t    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n\t        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);\r\n\t        if (IsUndefined(metadataMap))\r\n\t            return undefined;\r\n\t        return metadataMap.get(MetadataKey);\r\n\t    }\r\n\t    // OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n\t    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarydefineownmetadata--metadatakey-metadatavalue-o-p-\r\n\t    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n\t        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ true);\r\n\t        metadataMap.set(MetadataKey, MetadataValue);\r\n\t    }\r\n\t    // OrdinaryMetadataKeys(O, P)\r\n\t    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarymetadatakeys--o-p-\r\n\t    function OrdinaryMetadataKeys(O, P) {\r\n\t        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n\t        var parent = OrdinaryGetPrototypeOf(O);\r\n\t        if (parent === null)\r\n\t            return ownKeys;\r\n\t        var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n\t        if (parentKeys.length <= 0)\r\n\t            return ownKeys;\r\n\t        if (ownKeys.length <= 0)\r\n\t            return parentKeys;\r\n\t        var set = new _Set();\r\n\t        var keys = [];\r\n\t        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n\t            var key = ownKeys_1[_i];\r\n\t            var hasKey = set.has(key);\r\n\t            if (!hasKey) {\r\n\t                set.add(key);\r\n\t                keys.push(key);\r\n\t            }\r\n\t        }\r\n\t        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n\t            var key = parentKeys_1[_a];\r\n\t            var hasKey = set.has(key);\r\n\t            if (!hasKey) {\r\n\t                set.add(key);\r\n\t                keys.push(key);\r\n\t            }\r\n\t        }\r\n\t        return keys;\r\n\t    }\r\n\t    // OrdinaryOwnMetadataKeys(O, P)\r\n\t    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinaryownmetadatakeys--o-p-\r\n\t    function OrdinaryOwnMetadataKeys(O, P) {\r\n\t        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);\r\n\t        var keys = [];\r\n\t        if (IsUndefined(metadataMap))\r\n\t            return keys;\r\n\t        var keysObj = metadataMap.keys();\r\n\t        var iterator = GetIterator(keysObj);\r\n\t        while (true) {\r\n\t            var next = IteratorStep(iterator);\r\n\t            try {\r\n\t                if (!next)\r\n\t                    return keys;\r\n\t                var nextValue = IteratorValue(next);\r\n\t                keys.push(nextValue);\r\n\t            }\r\n\t            catch (e) {\r\n\t                try {\r\n\t                    if (next) {\r\n\t                        next = false;\r\n\t                        IteratorClose(iterator);\r\n\t                    }\r\n\t                }\r\n\t                finally {\r\n\t                    throw e;\r\n\t                }\r\n\t            }\r\n\t            finally {\r\n\t                if (next)\r\n\t                    IteratorClose(iterator);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    // ECMAScript Specification\r\n\t    // https://tc39.github.io/ecma262/\r\n\t    // 6 ECMAScript Data Typ0es and Values\r\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n\t    function Type(x) {\r\n\t        if (x === null)\r\n\t            return 1 /* Null */;\r\n\t        switch (typeof x) {\r\n\t            case \"undefined\": return 0 /* Undefined */;\r\n\t            case \"boolean\": return 2 /* Boolean */;\r\n\t            case \"string\": return 3 /* String */;\r\n\t            case \"symbol\": return 4 /* Symbol */;\r\n\t            case \"number\": return 5 /* Number */;\r\n\t            case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n\t            default: return 6 /* Object */;\r\n\t        }\r\n\t    }\r\n\t    // 6.1.1 The Undefined Type\r\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n\t    function IsUndefined(x) {\r\n\t        return x === undefined;\r\n\t    }\r\n\t    // 6.1.2 The Null Type\r\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n\t    function IsNull(x) {\r\n\t        return x === null;\r\n\t    }\r\n\t    // 6.1.5 The Symbol Type\r\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n\t    function IsSymbol(x) {\r\n\t        return typeof x === \"symbol\";\r\n\t    }\r\n\t    // 6.1.7 The Object Type\r\n\t    // https://tc39.github.io/ecma262/#sec-object-type\r\n\t    function IsObject(x) {\r\n\t        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n\t    }\r\n\t    // 7.1 Type Conversion\r\n\t    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n\t    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n\t    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n\t    function ToPrimitive(input, PreferredType) {\r\n\t        switch (Type(input)) {\r\n\t            case 0 /* Undefined */: return input;\r\n\t            case 1 /* Null */: return input;\r\n\t            case 2 /* Boolean */: return input;\r\n\t            case 3 /* String */: return input;\r\n\t            case 4 /* Symbol */: return input;\r\n\t            case 5 /* Number */: return input;\r\n\t        }\r\n\t        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n\t        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n\t        if (exoticToPrim !== undefined) {\r\n\t            var result = exoticToPrim.call(input, hint);\r\n\t            if (IsObject(result))\r\n\t                throw new TypeError();\r\n\t            return result;\r\n\t        }\r\n\t        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n\t    }\r\n\t    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n\t    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n\t    function OrdinaryToPrimitive(O, hint) {\r\n\t        if (hint === \"string\") {\r\n\t            var toString_1 = O.toString;\r\n\t            if (IsCallable(toString_1)) {\r\n\t                var result = toString_1.call(O);\r\n\t                if (!IsObject(result))\r\n\t                    return result;\r\n\t            }\r\n\t            var valueOf = O.valueOf;\r\n\t            if (IsCallable(valueOf)) {\r\n\t                var result = valueOf.call(O);\r\n\t                if (!IsObject(result))\r\n\t                    return result;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var valueOf = O.valueOf;\r\n\t            if (IsCallable(valueOf)) {\r\n\t                var result = valueOf.call(O);\r\n\t                if (!IsObject(result))\r\n\t                    return result;\r\n\t            }\r\n\t            var toString_2 = O.toString;\r\n\t            if (IsCallable(toString_2)) {\r\n\t                var result = toString_2.call(O);\r\n\t                if (!IsObject(result))\r\n\t                    return result;\r\n\t            }\r\n\t        }\r\n\t        throw new TypeError();\r\n\t    }\r\n\t    // 7.1.2 ToBoolean(argument)\r\n\t    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n\t    function ToBoolean(argument) {\r\n\t        return !!argument;\r\n\t    }\r\n\t    // 7.1.12 ToString(argument)\r\n\t    // https://tc39.github.io/ecma262/#sec-tostring\r\n\t    function ToString(argument) {\r\n\t        return \"\" + argument;\r\n\t    }\r\n\t    // 7.1.14 ToPropertyKey(argument)\r\n\t    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n\t    function ToPropertyKey(argument) {\r\n\t        var key = ToPrimitive(argument, 3 /* String */);\r\n\t        if (IsSymbol(key))\r\n\t            return key;\r\n\t        return ToString(key);\r\n\t    }\r\n\t    // 7.2 Testing and Comparison Operations\r\n\t    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n\t    // 7.2.2 IsArray(argument)\r\n\t    // https://tc39.github.io/ecma262/#sec-isarray\r\n\t    function IsArray(argument) {\r\n\t        return Array.isArray\r\n\t            ? Array.isArray(argument)\r\n\t            : argument instanceof Object\r\n\t                ? argument instanceof Array\r\n\t                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n\t    }\r\n\t    // 7.2.3 IsCallable(argument)\r\n\t    // https://tc39.github.io/ecma262/#sec-iscallable\r\n\t    function IsCallable(argument) {\r\n\t        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n\t        return typeof argument === \"function\";\r\n\t    }\r\n\t    // 7.2.4 IsConstructor(argument)\r\n\t    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n\t    function IsConstructor(argument) {\r\n\t        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n\t        return typeof argument === \"function\";\r\n\t    }\r\n\t    // 7.3 Operations on Objects\r\n\t    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n\t    // 7.3.9 GetMethod(V, P)\r\n\t    // https://tc39.github.io/ecma262/#sec-getmethod\r\n\t    function GetMethod(V, P) {\r\n\t        var func = V[P];\r\n\t        if (func === undefined || func === null)\r\n\t            return undefined;\r\n\t        if (!IsCallable(func))\r\n\t            throw new TypeError();\r\n\t        return func;\r\n\t    }\r\n\t    // 7.4 Operations on Iterator Objects\r\n\t    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n\t    function GetIterator(obj) {\r\n\t        var method = GetMethod(obj, iteratorSymbol);\r\n\t        if (!IsCallable(method))\r\n\t            throw new TypeError(); // from Call\r\n\t        var iterator = method.call(obj);\r\n\t        if (!IsObject(iterator))\r\n\t            throw new TypeError();\r\n\t        return iterator;\r\n\t    }\r\n\t    // 7.4.4 IteratorValue(iterResult)\r\n\t    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n\t    function IteratorValue(iterResult) {\r\n\t        return iterResult.value;\r\n\t    }\r\n\t    // 7.4.5 IteratorStep(iterator)\r\n\t    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n\t    function IteratorStep(iterator) {\r\n\t        var result = iterator.next();\r\n\t        return result.done ? false : result;\r\n\t    }\r\n\t    // 7.4.6 IteratorClose(iterator, completion)\r\n\t    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n\t    function IteratorClose(iterator) {\r\n\t        var f = iterator[\"return\"];\r\n\t        if (f)\r\n\t            f.call(iterator);\r\n\t    }\r\n\t    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n\t    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n\t    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n\t    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n\t    function OrdinaryGetPrototypeOf(O) {\r\n\t        var proto = Object.getPrototypeOf(O);\r\n\t        if (typeof O !== \"function\" || O === functionPrototype)\r\n\t            return proto;\r\n\t        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n\t        // Try to determine the superclass constructor. Compatible implementations\r\n\t        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n\t        // or ensure each class has a valid `constructor` property on its prototype that\r\n\t        // points back to the constructor.\r\n\t        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n\t        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n\t        if (proto !== functionPrototype)\r\n\t            return proto;\r\n\t        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n\t        var prototype = O.prototype;\r\n\t        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n\t        if (prototypeProto == null || prototypeProto === Object.prototype)\r\n\t            return proto;\r\n\t        // If the constructor was not a function, then we cannot determine the heritage.\r\n\t        var constructor = prototypeProto.constructor;\r\n\t        if (typeof constructor !== \"function\")\r\n\t            return proto;\r\n\t        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n\t        if (constructor === O)\r\n\t            return proto;\r\n\t        // we have a pretty good guess at the heritage.\r\n\t        return constructor;\r\n\t    }\r\n\t    // naive Map shim\r\n\t    function CreateMapPolyfill() {\r\n\t        var cacheSentinel = {};\r\n\t        var arraySentinel = [];\r\n\t        var MapIterator = (function () {\r\n\t            function MapIterator(keys, values, selector) {\r\n\t                this._index = 0;\r\n\t                this._keys = keys;\r\n\t                this._values = values;\r\n\t                this._selector = selector;\r\n\t            }\r\n\t            MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n\t            MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n\t            MapIterator.prototype.next = function () {\r\n\t                var index = this._index;\r\n\t                if (index >= 0 && index < this._keys.length) {\r\n\t                    var result = this._selector(this._keys[index], this._values[index]);\r\n\t                    if (index + 1 >= this._keys.length) {\r\n\t                        this._index = -1;\r\n\t                        this._keys = arraySentinel;\r\n\t                        this._values = arraySentinel;\r\n\t                    }\r\n\t                    else {\r\n\t                        this._index++;\r\n\t                    }\r\n\t                    return { value: result, done: false };\r\n\t                }\r\n\t                return { value: undefined, done: true };\r\n\t            };\r\n\t            MapIterator.prototype.throw = function (error) {\r\n\t                if (this._index >= 0) {\r\n\t                    this._index = -1;\r\n\t                    this._keys = arraySentinel;\r\n\t                    this._values = arraySentinel;\r\n\t                }\r\n\t                throw error;\r\n\t            };\r\n\t            MapIterator.prototype.return = function (value) {\r\n\t                if (this._index >= 0) {\r\n\t                    this._index = -1;\r\n\t                    this._keys = arraySentinel;\r\n\t                    this._values = arraySentinel;\r\n\t                }\r\n\t                return { value: value, done: true };\r\n\t            };\r\n\t            return MapIterator;\r\n\t        }());\r\n\t        return (function () {\r\n\t            function Map() {\r\n\t                this._keys = [];\r\n\t                this._values = [];\r\n\t                this._cacheKey = cacheSentinel;\r\n\t                this._cacheIndex = -2;\r\n\t            }\r\n\t            Object.defineProperty(Map.prototype, \"size\", {\r\n\t                get: function () { return this._keys.length; },\r\n\t                enumerable: true,\r\n\t                configurable: true\r\n\t            });\r\n\t            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n\t            Map.prototype.get = function (key) {\r\n\t                var index = this._find(key, /*insert*/ false);\r\n\t                return index >= 0 ? this._values[index] : undefined;\r\n\t            };\r\n\t            Map.prototype.set = function (key, value) {\r\n\t                var index = this._find(key, /*insert*/ true);\r\n\t                this._values[index] = value;\r\n\t                return this;\r\n\t            };\r\n\t            Map.prototype.delete = function (key) {\r\n\t                var index = this._find(key, /*insert*/ false);\r\n\t                if (index >= 0) {\r\n\t                    var size = this._keys.length;\r\n\t                    for (var i = index + 1; i < size; i++) {\r\n\t                        this._keys[i - 1] = this._keys[i];\r\n\t                        this._values[i - 1] = this._values[i];\r\n\t                    }\r\n\t                    this._keys.length--;\r\n\t                    this._values.length--;\r\n\t                    if (key === this._cacheKey) {\r\n\t                        this._cacheKey = cacheSentinel;\r\n\t                        this._cacheIndex = -2;\r\n\t                    }\r\n\t                    return true;\r\n\t                }\r\n\t                return false;\r\n\t            };\r\n\t            Map.prototype.clear = function () {\r\n\t                this._keys.length = 0;\r\n\t                this._values.length = 0;\r\n\t                this._cacheKey = cacheSentinel;\r\n\t                this._cacheIndex = -2;\r\n\t            };\r\n\t            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n\t            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n\t            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n\t            Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n\t            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n\t            Map.prototype._find = function (key, insert) {\r\n\t                if (this._cacheKey === key)\r\n\t                    return this._cacheIndex;\r\n\t                var index = this._keys.indexOf(key);\r\n\t                if (index < 0 && insert) {\r\n\t                    index = this._keys.length;\r\n\t                    this._keys.push(key);\r\n\t                    this._values.push(undefined);\r\n\t                }\r\n\t                return this._cacheKey = key, this._cacheIndex = index;\r\n\t            };\r\n\t            return Map;\r\n\t        }());\r\n\t        function getKey(key, _) {\r\n\t            return key;\r\n\t        }\r\n\t        function getValue(_, value) {\r\n\t            return value;\r\n\t        }\r\n\t        function getEntry(key, value) {\r\n\t            return [key, value];\r\n\t        }\r\n\t    }\r\n\t    // naive Set shim\r\n\t    function CreateSetPolyfill() {\r\n\t        return (function () {\r\n\t            function Set() {\r\n\t                this._map = new _Map();\r\n\t            }\r\n\t            Object.defineProperty(Set.prototype, \"size\", {\r\n\t                get: function () { return this._map.size; },\r\n\t                enumerable: true,\r\n\t                configurable: true\r\n\t            });\r\n\t            Set.prototype.has = function (value) { return this._map.has(value); };\r\n\t            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n\t            Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n\t            Set.prototype.clear = function () { this._map.clear(); };\r\n\t            Set.prototype.keys = function () { return this._map.keys(); };\r\n\t            Set.prototype.values = function () { return this._map.values(); };\r\n\t            Set.prototype.entries = function () { return this._map.entries(); };\r\n\t            Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n\t            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n\t            return Set;\r\n\t        }());\r\n\t    }\r\n\t    // naive WeakMap shim\r\n\t    function CreateWeakMapPolyfill() {\r\n\t        var UUID_SIZE = 16;\r\n\t        var keys = createDictionary();\r\n\t        var rootKey = CreateUniqueKey();\r\n\t        return (function () {\r\n\t            function WeakMap() {\r\n\t                this._key = CreateUniqueKey();\r\n\t            }\r\n\t            WeakMap.prototype.has = function (target) {\r\n\t                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n\t                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n\t            };\r\n\t            WeakMap.prototype.get = function (target) {\r\n\t                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n\t                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n\t            };\r\n\t            WeakMap.prototype.set = function (target, value) {\r\n\t                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n\t                table[this._key] = value;\r\n\t                return this;\r\n\t            };\r\n\t            WeakMap.prototype.delete = function (target) {\r\n\t                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n\t                return table !== undefined ? delete table[this._key] : false;\r\n\t            };\r\n\t            WeakMap.prototype.clear = function () {\r\n\t                // NOTE: not a real clear, just makes the previous data unreachable\r\n\t                this._key = CreateUniqueKey();\r\n\t            };\r\n\t            return WeakMap;\r\n\t        }());\r\n\t        function CreateUniqueKey() {\r\n\t            var key;\r\n\t            do\r\n\t                key = \"@@WeakMap@@\" + CreateUUID();\r\n\t            while (HashMap.has(keys, key));\r\n\t            keys[key] = true;\r\n\t            return key;\r\n\t        }\r\n\t        function GetOrCreateWeakMapTable(target, create) {\r\n\t            if (!hasOwn.call(target, rootKey)) {\r\n\t                if (!create)\r\n\t                    return undefined;\r\n\t                Object.defineProperty(target, rootKey, { value: createDictionary() });\r\n\t            }\r\n\t            return target[rootKey];\r\n\t        }\r\n\t        function FillRandomBytes(buffer, size) {\r\n\t            for (var i = 0; i < size; ++i)\r\n\t                buffer[i] = Math.random() * 0xff | 0;\r\n\t            return buffer;\r\n\t        }\r\n\t        function GenRandomBytes(size) {\r\n\t            if (typeof Uint8Array === \"function\") {\r\n\t                if (typeof crypto !== \"undefined\")\r\n\t                    return crypto.getRandomValues(new Uint8Array(size));\r\n\t                if (typeof msCrypto !== \"undefined\")\r\n\t                    return msCrypto.getRandomValues(new Uint8Array(size));\r\n\t                return FillRandomBytes(new Uint8Array(size), size);\r\n\t            }\r\n\t            return FillRandomBytes(new Array(size), size);\r\n\t        }\r\n\t        function CreateUUID() {\r\n\t            var data = GenRandomBytes(UUID_SIZE);\r\n\t            // mark as random - RFC 4122 § 4.4\r\n\t            data[6] = data[6] & 0x4f | 0x40;\r\n\t            data[8] = data[8] & 0xbf | 0x80;\r\n\t            var result = \"\";\r\n\t            for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n\t                var byte = data[offset];\r\n\t                if (offset === 4 || offset === 6 || offset === 8)\r\n\t                    result += \"-\";\r\n\t                if (byte < 16)\r\n\t                    result += \"0\";\r\n\t                result += byte.toString(16).toLowerCase();\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t    }\r\n\t    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n\t    function MakeDictionary(obj) {\r\n\t        obj.__ = undefined;\r\n\t        delete obj.__;\r\n\t        return obj;\r\n\t    }\r\n\t    // patch global Reflect\r\n\t    (function (__global) {\r\n\t        if (typeof __global.Reflect !== \"undefined\") {\r\n\t            if (__global.Reflect !== Reflect) {\r\n\t                for (var p in Reflect) {\r\n\t                    if (hasOwn.call(Reflect, p)) {\r\n\t                        __global.Reflect[p] = Reflect[p];\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            __global.Reflect = Reflect;\r\n\t        }\r\n\t    })(typeof global !== \"undefined\" ? global :\r\n\t        typeof self !== \"undefined\" ? self :\r\n\t            Function(\"return this;\")());\r\n\t})(Reflect || (Reflect = {}));\r\n\t//# sourceMappingURL=Reflect.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/**\n\t* @license\n\t* Copyright Google Inc. All Rights Reserved.\n\t*\n\t* Use of this source code is governed by an MIT-style license that can be\n\t* found in the LICENSE file at https://angular.io/license\n\t*/\n\t(function (global, factory) {\n\t     true ? factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    (factory());\n\t}(this, (function () { 'use strict';\n\t\n\t/**\n\t * @license\n\t * Copyright Google Inc. All Rights Reserved.\n\t *\n\t * Use of this source code is governed by an MIT-style license that can be\n\t * found in the LICENSE file at https://angular.io/license\n\t */\n\t\n\t\n\tvar Zone$1 = (function (global) {\n\t    if (global.Zone) {\n\t        throw new Error('Zone already loaded.');\n\t    }\n\t    var Zone = (function () {\n\t        function Zone(parent, zoneSpec) {\n\t            this._properties = null;\n\t            this._parent = parent;\n\t            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n\t            this._properties = zoneSpec && zoneSpec.properties || {};\n\t            this._zoneDelegate =\n\t                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n\t        }\n\t        Zone.assertZonePatched = function () {\n\t            if (global.Promise !== ZoneAwarePromise) {\n\t                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n\t                    'has been overwritten.\\n' +\n\t                    'Most likely cause is that a Promise polyfill has been loaded ' +\n\t                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n\t                    'If you must load one, do so before loading zone.js.)');\n\t            }\n\t        };\n\t        Object.defineProperty(Zone, \"current\", {\n\t            get: function () {\n\t                return _currentZone;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        \n\t        Object.defineProperty(Zone, \"currentTask\", {\n\t            get: function () {\n\t                return _currentTask;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        \n\t        Object.defineProperty(Zone.prototype, \"parent\", {\n\t            get: function () {\n\t                return this._parent;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        \n\t        Object.defineProperty(Zone.prototype, \"name\", {\n\t            get: function () {\n\t                return this._name;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        \n\t        Zone.prototype.get = function (key) {\n\t            var zone = this.getZoneWith(key);\n\t            if (zone)\n\t                return zone._properties[key];\n\t        };\n\t        Zone.prototype.getZoneWith = function (key) {\n\t            var current = this;\n\t            while (current) {\n\t                if (current._properties.hasOwnProperty(key)) {\n\t                    return current;\n\t                }\n\t                current = current._parent;\n\t            }\n\t            return null;\n\t        };\n\t        Zone.prototype.fork = function (zoneSpec) {\n\t            if (!zoneSpec)\n\t                throw new Error('ZoneSpec required!');\n\t            return this._zoneDelegate.fork(this, zoneSpec);\n\t        };\n\t        Zone.prototype.wrap = function (callback, source) {\n\t            if (typeof callback !== 'function') {\n\t                throw new Error('Expecting function got: ' + callback);\n\t            }\n\t            var _callback = this._zoneDelegate.intercept(this, callback, source);\n\t            var zone = this;\n\t            return function () {\n\t                return zone.runGuarded(_callback, this, arguments, source);\n\t            };\n\t        };\n\t        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\n\t            if (applyThis === void 0) { applyThis = null; }\n\t            if (applyArgs === void 0) { applyArgs = null; }\n\t            if (source === void 0) { source = null; }\n\t            var oldZone = _currentZone;\n\t            _currentZone = this;\n\t            try {\n\t                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n\t            }\n\t            finally {\n\t                _currentZone = oldZone;\n\t            }\n\t        };\n\t        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n\t            if (applyThis === void 0) { applyThis = null; }\n\t            if (applyArgs === void 0) { applyArgs = null; }\n\t            if (source === void 0) { source = null; }\n\t            var oldZone = _currentZone;\n\t            _currentZone = this;\n\t            try {\n\t                try {\n\t                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n\t                }\n\t                catch (error) {\n\t                    if (this._zoneDelegate.handleError(this, error)) {\n\t                        throw error;\n\t                    }\n\t                }\n\t            }\n\t            finally {\n\t                _currentZone = oldZone;\n\t            }\n\t        };\n\t        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\n\t            task.runCount++;\n\t            if (task.zone != this)\n\t                throw new Error('A task can only be run in the zone which created it! (Creation: ' + task.zone.name +\n\t                    '; Execution: ' + this.name + ')');\n\t            var previousTask = _currentTask;\n\t            _currentTask = task;\n\t            var oldZone = _currentZone;\n\t            _currentZone = this;\n\t            try {\n\t                if (task.type == 'macroTask' && task.data && !task.data.isPeriodic) {\n\t                    task.cancelFn = null;\n\t                }\n\t                try {\n\t                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n\t                }\n\t                catch (error) {\n\t                    if (this._zoneDelegate.handleError(this, error)) {\n\t                        throw error;\n\t                    }\n\t                }\n\t            }\n\t            finally {\n\t                _currentZone = oldZone;\n\t                _currentTask = previousTask;\n\t            }\n\t        };\n\t        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n\t            return this._zoneDelegate.scheduleTask(this, new ZoneTask('microTask', this, source, callback, data, customSchedule, null));\n\t        };\n\t        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n\t            return this._zoneDelegate.scheduleTask(this, new ZoneTask('macroTask', this, source, callback, data, customSchedule, customCancel));\n\t        };\n\t        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n\t            return this._zoneDelegate.scheduleTask(this, new ZoneTask('eventTask', this, source, callback, data, customSchedule, customCancel));\n\t        };\n\t        Zone.prototype.cancelTask = function (task) {\n\t            var value = this._zoneDelegate.cancelTask(this, task);\n\t            task.runCount = -1;\n\t            task.cancelFn = null;\n\t            return value;\n\t        };\n\t        Zone.__symbol__ = __symbol__;\n\t        return Zone;\n\t    }());\n\t    \n\t    var ZoneDelegate = (function () {\n\t        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\n\t            this._taskCounts = { microTask: 0, macroTask: 0, eventTask: 0 };\n\t            this.zone = zone;\n\t            this._parentDelegate = parentDelegate;\n\t            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n\t            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n\t            this._interceptZS =\n\t                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n\t            this._interceptDlgt =\n\t                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n\t            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n\t            this._invokeDlgt =\n\t                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n\t            this._handleErrorZS =\n\t                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n\t            this._handleErrorDlgt =\n\t                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n\t            this._scheduleTaskZS =\n\t                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n\t            this._scheduleTaskDlgt =\n\t                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n\t            this._invokeTaskZS =\n\t                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n\t            this._invokeTaskDlgt =\n\t                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n\t            this._cancelTaskZS =\n\t                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n\t            this._cancelTaskDlgt =\n\t                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n\t            this._hasTaskZS = zoneSpec && (zoneSpec.onHasTask ? zoneSpec : parentDelegate._hasTaskZS);\n\t            this._hasTaskDlgt =\n\t                zoneSpec && (zoneSpec.onHasTask ? parentDelegate : parentDelegate._hasTaskDlgt);\n\t        }\n\t        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n\t            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n\t                new Zone(targetZone, zoneSpec);\n\t        };\n\t        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n\t            return this._interceptZS ?\n\t                this._interceptZS.onIntercept(this._interceptDlgt, this.zone, targetZone, callback, source) :\n\t                callback;\n\t        };\n\t        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n\t            return this._invokeZS ?\n\t                this._invokeZS.onInvoke(this._invokeDlgt, this.zone, targetZone, callback, applyThis, applyArgs, source) :\n\t                callback.apply(applyThis, applyArgs);\n\t        };\n\t        ZoneDelegate.prototype.handleError = function (targetZone, error) {\n\t            return this._handleErrorZS ?\n\t                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this.zone, targetZone, error) :\n\t                true;\n\t        };\n\t        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n\t            try {\n\t                if (this._scheduleTaskZS) {\n\t                    return this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this.zone, targetZone, task);\n\t                }\n\t                else if (task.scheduleFn) {\n\t                    task.scheduleFn(task);\n\t                }\n\t                else if (task.type == 'microTask') {\n\t                    scheduleMicroTask(task);\n\t                }\n\t                else {\n\t                    throw new Error('Task is missing scheduleFn.');\n\t                }\n\t                return task;\n\t            }\n\t            finally {\n\t                if (targetZone == this.zone) {\n\t                    this._updateTaskCount(task.type, 1);\n\t                }\n\t            }\n\t        };\n\t        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n\t            try {\n\t                return this._invokeTaskZS ?\n\t                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this.zone, targetZone, task, applyThis, applyArgs) :\n\t                    task.callback.apply(applyThis, applyArgs);\n\t            }\n\t            finally {\n\t                if (targetZone == this.zone && (task.type != 'eventTask') &&\n\t                    !(task.data && task.data.isPeriodic)) {\n\t                    this._updateTaskCount(task.type, -1);\n\t                }\n\t            }\n\t        };\n\t        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n\t            var value;\n\t            if (this._cancelTaskZS) {\n\t                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this.zone, targetZone, task);\n\t            }\n\t            else if (!task.cancelFn) {\n\t                throw new Error('Task does not support cancellation, or is already canceled.');\n\t            }\n\t            else {\n\t                value = task.cancelFn(task);\n\t            }\n\t            if (targetZone == this.zone) {\n\t                // this should not be in the finally block, because exceptions assume not canceled.\n\t                this._updateTaskCount(task.type, -1);\n\t            }\n\t            return value;\n\t        };\n\t        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n\t            return this._hasTaskZS &&\n\t                this._hasTaskZS.onHasTask(this._hasTaskDlgt, this.zone, targetZone, isEmpty);\n\t        };\n\t        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n\t            var counts = this._taskCounts;\n\t            var prev = counts[type];\n\t            var next = counts[type] = prev + count;\n\t            if (next < 0) {\n\t                throw new Error('More tasks executed then were scheduled.');\n\t            }\n\t            if (prev == 0 || next == 0) {\n\t                var isEmpty = {\n\t                    microTask: counts.microTask > 0,\n\t                    macroTask: counts.macroTask > 0,\n\t                    eventTask: counts.eventTask > 0,\n\t                    change: type\n\t                };\n\t                try {\n\t                    this.hasTask(this.zone, isEmpty);\n\t                }\n\t                finally {\n\t                    if (this._parentDelegate) {\n\t                        this._parentDelegate._updateTaskCount(type, count);\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        return ZoneDelegate;\n\t    }());\n\t    var ZoneTask = (function () {\n\t        function ZoneTask(type, zone, source, callback, options, scheduleFn, cancelFn) {\n\t            this.runCount = 0;\n\t            this.type = type;\n\t            this.zone = zone;\n\t            this.source = source;\n\t            this.data = options;\n\t            this.scheduleFn = scheduleFn;\n\t            this.cancelFn = cancelFn;\n\t            this.callback = callback;\n\t            var self = this;\n\t            this.invoke = function () {\n\t                _numberOfNestedTaskFrames++;\n\t                try {\n\t                    return zone.runTask(self, this, arguments);\n\t                }\n\t                finally {\n\t                    if (_numberOfNestedTaskFrames == 1) {\n\t                        drainMicroTaskQueue();\n\t                    }\n\t                    _numberOfNestedTaskFrames--;\n\t                }\n\t            };\n\t        }\n\t        ZoneTask.prototype.toString = function () {\n\t            if (this.data && typeof this.data.handleId !== 'undefined') {\n\t                return this.data.handleId;\n\t            }\n\t            else {\n\t                return Object.prototype.toString.call(this);\n\t            }\n\t        };\n\t        return ZoneTask;\n\t    }());\n\t    function __symbol__(name) {\n\t        return '__zone_symbol__' + name;\n\t    }\n\t    \n\t    var symbolSetTimeout = __symbol__('setTimeout');\n\t    var symbolPromise = __symbol__('Promise');\n\t    var symbolThen = __symbol__('then');\n\t    var _currentZone = new Zone(null, null);\n\t    var _currentTask = null;\n\t    var _microTaskQueue = [];\n\t    var _isDrainingMicrotaskQueue = false;\n\t    var _uncaughtPromiseErrors = [];\n\t    var _numberOfNestedTaskFrames = 0;\n\t    function scheduleQueueDrain() {\n\t        // if we are not running in any task, and there has not been anything scheduled\n\t        // we must bootstrap the initial task creation by manually scheduling the drain\n\t        if (_numberOfNestedTaskFrames == 0 && _microTaskQueue.length == 0) {\n\t            // We are not running in Task, so we need to kickstart the microtask queue.\n\t            if (global[symbolPromise]) {\n\t                global[symbolPromise].resolve(0)[symbolThen](drainMicroTaskQueue);\n\t            }\n\t            else {\n\t                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n\t            }\n\t        }\n\t    }\n\t    function scheduleMicroTask(task) {\n\t        scheduleQueueDrain();\n\t        _microTaskQueue.push(task);\n\t    }\n\t    function consoleError(e) {\n\t        var rejection = e && e.rejection;\n\t        if (rejection) {\n\t            console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n\t        }\n\t        console.error(e);\n\t    }\n\t    function drainMicroTaskQueue() {\n\t        if (!_isDrainingMicrotaskQueue) {\n\t            _isDrainingMicrotaskQueue = true;\n\t            while (_microTaskQueue.length) {\n\t                var queue = _microTaskQueue;\n\t                _microTaskQueue = [];\n\t                for (var i = 0; i < queue.length; i++) {\n\t                    var task = queue[i];\n\t                    try {\n\t                        task.zone.runTask(task, null, null);\n\t                    }\n\t                    catch (e) {\n\t                        consoleError(e);\n\t                    }\n\t                }\n\t            }\n\t            while (_uncaughtPromiseErrors.length) {\n\t                var _loop_1 = function() {\n\t                    var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n\t                    try {\n\t                        uncaughtPromiseError.zone.runGuarded(function () {\n\t                            throw uncaughtPromiseError;\n\t                        });\n\t                    }\n\t                    catch (e) {\n\t                        consoleError(e);\n\t                    }\n\t                };\n\t                while (_uncaughtPromiseErrors.length) {\n\t                    _loop_1();\n\t                }\n\t            }\n\t            _isDrainingMicrotaskQueue = false;\n\t        }\n\t    }\n\t    function isThenable(value) {\n\t        return value && value.then;\n\t    }\n\t    function forwardResolution(value) {\n\t        return value;\n\t    }\n\t    function forwardRejection(rejection) {\n\t        return ZoneAwarePromise.reject(rejection);\n\t    }\n\t    var symbolState = __symbol__('state');\n\t    var symbolValue = __symbol__('value');\n\t    var source = 'Promise.then';\n\t    var UNRESOLVED = null;\n\t    var RESOLVED = true;\n\t    var REJECTED = false;\n\t    var REJECTED_NO_CATCH = 0;\n\t    function makeResolver(promise, state) {\n\t        return function (v) {\n\t            resolvePromise(promise, state, v);\n\t            // Do not return value or you will break the Promise spec.\n\t        };\n\t    }\n\t    function resolvePromise(promise, state, value) {\n\t        if (promise[symbolState] === UNRESOLVED) {\n\t            if (value instanceof ZoneAwarePromise && value[symbolState] !== UNRESOLVED) {\n\t                clearRejectedNoCatch(value);\n\t                resolvePromise(promise, value[symbolState], value[symbolValue]);\n\t            }\n\t            else if (isThenable(value)) {\n\t                value.then(makeResolver(promise, state), makeResolver(promise, false));\n\t            }\n\t            else {\n\t                promise[symbolState] = state;\n\t                var queue = promise[symbolValue];\n\t                promise[symbolValue] = value;\n\t                for (var i = 0; i < queue.length;) {\n\t                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n\t                }\n\t                if (queue.length == 0 && state == REJECTED) {\n\t                    promise[symbolState] = REJECTED_NO_CATCH;\n\t                    try {\n\t                        throw new Error('Uncaught (in promise): ' + value +\n\t                            (value && value.stack ? '\\n' + value.stack : ''));\n\t                    }\n\t                    catch (e) {\n\t                        var error_1 = e;\n\t                        error_1.rejection = value;\n\t                        error_1.promise = promise;\n\t                        error_1.zone = Zone.current;\n\t                        error_1.task = Zone.currentTask;\n\t                        _uncaughtPromiseErrors.push(error_1);\n\t                        scheduleQueueDrain();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        // Resolving an already resolved promise is a noop.\n\t        return promise;\n\t    }\n\t    function clearRejectedNoCatch(promise) {\n\t        if (promise[symbolState] === REJECTED_NO_CATCH) {\n\t            promise[symbolState] = REJECTED;\n\t            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n\t                if (promise === _uncaughtPromiseErrors[i].promise) {\n\t                    _uncaughtPromiseErrors.splice(i, 1);\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n\t        clearRejectedNoCatch(promise);\n\t        var delegate = promise[symbolState] ? onFulfilled || forwardResolution : onRejected || forwardRejection;\n\t        zone.scheduleMicroTask(source, function () {\n\t            try {\n\t                resolvePromise(chainPromise, true, zone.run(delegate, null, [promise[symbolValue]]));\n\t            }\n\t            catch (error) {\n\t                resolvePromise(chainPromise, false, error);\n\t            }\n\t        });\n\t    }\n\t    var ZoneAwarePromise = (function () {\n\t        function ZoneAwarePromise(executor) {\n\t            var promise = this;\n\t            if (!(promise instanceof ZoneAwarePromise)) {\n\t                throw new Error('Must be an instanceof Promise.');\n\t            }\n\t            promise[symbolState] = UNRESOLVED;\n\t            promise[symbolValue] = []; // queue;\n\t            try {\n\t                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n\t            }\n\t            catch (e) {\n\t                resolvePromise(promise, false, e);\n\t            }\n\t        }\n\t        ZoneAwarePromise.resolve = function (value) {\n\t            return resolvePromise(new this(null), RESOLVED, value);\n\t        };\n\t        ZoneAwarePromise.reject = function (error) {\n\t            return resolvePromise(new this(null), REJECTED, error);\n\t        };\n\t        ZoneAwarePromise.race = function (values) {\n\t            var resolve;\n\t            var reject;\n\t            var promise = new this(function (res, rej) {\n\t                _a = [res, rej], resolve = _a[0], reject = _a[1];\n\t                var _a;\n\t            });\n\t            function onResolve(value) {\n\t                promise && (promise = null || resolve(value));\n\t            }\n\t            function onReject(error) {\n\t                promise && (promise = null || reject(error));\n\t            }\n\t            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n\t                var value = values_1[_i];\n\t                if (!isThenable(value)) {\n\t                    value = this.resolve(value);\n\t                }\n\t                value.then(onResolve, onReject);\n\t            }\n\t            return promise;\n\t        };\n\t        ZoneAwarePromise.all = function (values) {\n\t            var resolve;\n\t            var reject;\n\t            var promise = new this(function (res, rej) {\n\t                resolve = res;\n\t                reject = rej;\n\t            });\n\t            var count = 0;\n\t            var resolvedValues = [];\n\t            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\n\t                var value = values_2[_i];\n\t                if (!isThenable(value)) {\n\t                    value = this.resolve(value);\n\t                }\n\t                value.then((function (index) { return function (value) {\n\t                    resolvedValues[index] = value;\n\t                    count--;\n\t                    if (!count) {\n\t                        resolve(resolvedValues);\n\t                    }\n\t                }; })(count), reject);\n\t                count++;\n\t            }\n\t            if (!count)\n\t                resolve(resolvedValues);\n\t            return promise;\n\t        };\n\t        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n\t            var chainPromise = new this.constructor(null);\n\t            var zone = Zone.current;\n\t            if (this[symbolState] == UNRESOLVED) {\n\t                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n\t            }\n\t            else {\n\t                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n\t            }\n\t            return chainPromise;\n\t        };\n\t        ZoneAwarePromise.prototype.catch = function (onRejected) {\n\t            return this.then(null, onRejected);\n\t        };\n\t        return ZoneAwarePromise;\n\t    }());\n\t    // Protect against aggressive optimizers dropping seemingly unused properties.\n\t    // E.g. Closure Compiler in advanced mode.\n\t    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n\t    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n\t    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n\t    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n\t    var NativePromise = global[__symbol__('Promise')] = global.Promise;\n\t    global.Promise = ZoneAwarePromise;\n\t    function patchThen(NativePromise) {\n\t        var NativePromiseProtototype = NativePromise.prototype;\n\t        var NativePromiseThen = NativePromiseProtototype[__symbol__('then')] =\n\t            NativePromiseProtototype.then;\n\t        NativePromiseProtototype.then = function (onResolve, onReject) {\n\t            var nativePromise = this;\n\t            return new ZoneAwarePromise(function (resolve, reject) {\n\t                NativePromiseThen.call(nativePromise, resolve, reject);\n\t            })\n\t                .then(onResolve, onReject);\n\t        };\n\t    }\n\t    if (NativePromise) {\n\t        patchThen(NativePromise);\n\t        if (typeof global['fetch'] !== 'undefined') {\n\t            var fetchPromise = void 0;\n\t            try {\n\t                // In MS Edge this throws\n\t                fetchPromise = global['fetch']();\n\t            }\n\t            catch (e) {\n\t                // In Chrome this throws instead.\n\t                fetchPromise = global['fetch']('about:blank');\n\t            }\n\t            // ignore output to prevent error;\n\t            fetchPromise.then(function () { return null; }, function () { return null; });\n\t            if (fetchPromise.constructor != NativePromise &&\n\t                fetchPromise.constructor != ZoneAwarePromise) {\n\t                patchThen(fetchPromise.constructor);\n\t            }\n\t        }\n\t    }\n\t    // This is not part of public API, but it is usefull for tests, so we expose it.\n\t    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n\t    return global.Zone = Zone;\n\t})(typeof window === 'object' && window || typeof self === 'object' && self || global);\n\t\n\t/**\n\t * @license\n\t * Copyright Google Inc. All Rights Reserved.\n\t *\n\t * Use of this source code is governed by an MIT-style license that can be\n\t * found in the LICENSE file at https://angular.io/license\n\t */\n\tvar zoneSymbol = Zone['__symbol__'];\n\tvar _global$1 = typeof window === 'object' && window || typeof self === 'object' && self || global;\n\tfunction bindArguments(args, source) {\n\t    for (var i = args.length - 1; i >= 0; i--) {\n\t        if (typeof args[i] === 'function') {\n\t            args[i] = Zone.current.wrap(args[i], source + '_' + i);\n\t        }\n\t    }\n\t    return args;\n\t}\n\t\n\tfunction patchPrototype(prototype, fnNames) {\n\t    var source = prototype.constructor['name'];\n\t    var _loop_1 = function(i) {\n\t        var name_1 = fnNames[i];\n\t        var delegate = prototype[name_1];\n\t        if (delegate) {\n\t            prototype[name_1] = (function (delegate) {\n\t                return function () {\n\t                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));\n\t                };\n\t            })(delegate);\n\t        }\n\t    };\n\t    for (var i = 0; i < fnNames.length; i++) {\n\t        _loop_1(i);\n\t    }\n\t}\n\t\n\tvar isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n\tvar isNode = (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]');\n\tvar isBrowser = !isNode && !isWebWorker && !!(typeof window !== 'undefined' && window['HTMLElement']);\n\tfunction patchProperty(obj, prop) {\n\t    var desc = Object.getOwnPropertyDescriptor(obj, prop) || { enumerable: true, configurable: true };\n\t    // A property descriptor cannot have getter/setter and be writable\n\t    // deleting the writable and value properties avoids this error:\n\t    //\n\t    // TypeError: property descriptors must not specify a value or be writable when a\n\t    // getter or setter has been specified\n\t    delete desc.writable;\n\t    delete desc.value;\n\t    // substr(2) cuz 'onclick' -> 'click', etc\n\t    var eventName = prop.substr(2);\n\t    var _prop = '_' + prop;\n\t    desc.set = function (fn) {\n\t        if (this[_prop]) {\n\t            this.removeEventListener(eventName, this[_prop]);\n\t        }\n\t        if (typeof fn === 'function') {\n\t            var wrapFn = function (event) {\n\t                var result;\n\t                result = fn.apply(this, arguments);\n\t                if (result != undefined && !result)\n\t                    event.preventDefault();\n\t            };\n\t            this[_prop] = wrapFn;\n\t            this.addEventListener(eventName, wrapFn, false);\n\t        }\n\t        else {\n\t            this[_prop] = null;\n\t        }\n\t    };\n\t    // The getter would return undefined for unassigned properties but the default value of an\n\t    // unassigned property is null\n\t    desc.get = function () {\n\t        return this[_prop] || null;\n\t    };\n\t    Object.defineProperty(obj, prop, desc);\n\t}\n\t\n\tfunction patchOnProperties(obj, properties) {\n\t    var onProperties = [];\n\t    for (var prop in obj) {\n\t        if (prop.substr(0, 2) == 'on') {\n\t            onProperties.push(prop);\n\t        }\n\t    }\n\t    for (var j = 0; j < onProperties.length; j++) {\n\t        patchProperty(obj, onProperties[j]);\n\t    }\n\t    if (properties) {\n\t        for (var i = 0; i < properties.length; i++) {\n\t            patchProperty(obj, 'on' + properties[i]);\n\t        }\n\t    }\n\t}\n\t\n\tvar EVENT_TASKS = zoneSymbol('eventTasks');\n\t// For EventTarget\n\tvar ADD_EVENT_LISTENER = 'addEventListener';\n\tvar REMOVE_EVENT_LISTENER = 'removeEventListener';\n\tfunction findExistingRegisteredTask(target, handler, name, capture, remove) {\n\t    var eventTasks = target[EVENT_TASKS];\n\t    if (eventTasks) {\n\t        for (var i = 0; i < eventTasks.length; i++) {\n\t            var eventTask = eventTasks[i];\n\t            var data = eventTask.data;\n\t            if (data.handler === handler && data.useCapturing === capture && data.eventName === name) {\n\t                if (remove) {\n\t                    eventTasks.splice(i, 1);\n\t                }\n\t                return eventTask;\n\t            }\n\t        }\n\t    }\n\t    return null;\n\t}\n\tfunction attachRegisteredEvent(target, eventTask) {\n\t    var eventTasks = target[EVENT_TASKS];\n\t    if (!eventTasks) {\n\t        eventTasks = target[EVENT_TASKS] = [];\n\t    }\n\t    eventTasks.push(eventTask);\n\t}\n\tfunction makeZoneAwareAddListener(addFnName, removeFnName, useCapturingParam, allowDuplicates) {\n\t    if (useCapturingParam === void 0) { useCapturingParam = true; }\n\t    if (allowDuplicates === void 0) { allowDuplicates = false; }\n\t    var addFnSymbol = zoneSymbol(addFnName);\n\t    var removeFnSymbol = zoneSymbol(removeFnName);\n\t    var defaultUseCapturing = useCapturingParam ? false : undefined;\n\t    function scheduleEventListener(eventTask) {\n\t        var meta = eventTask.data;\n\t        attachRegisteredEvent(meta.target, eventTask);\n\t        return meta.target[addFnSymbol](meta.eventName, eventTask.invoke, meta.useCapturing);\n\t    }\n\t    function cancelEventListener(eventTask) {\n\t        var meta = eventTask.data;\n\t        findExistingRegisteredTask(meta.target, eventTask.invoke, meta.eventName, meta.useCapturing, true);\n\t        meta.target[removeFnSymbol](meta.eventName, eventTask.invoke, meta.useCapturing);\n\t    }\n\t    return function zoneAwareAddListener(self, args) {\n\t        var eventName = args[0];\n\t        var handler = args[1];\n\t        var useCapturing = args[2] || defaultUseCapturing;\n\t        // - Inside a Web Worker, `this` is undefined, the context is `global`\n\t        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n\t        // see https://github.com/angular/zone.js/issues/190\n\t        var target = self || _global$1;\n\t        var delegate = null;\n\t        if (typeof handler == 'function') {\n\t            delegate = handler;\n\t        }\n\t        else if (handler && handler.handleEvent) {\n\t            delegate = function (event) { return handler.handleEvent(event); };\n\t        }\n\t        var validZoneHandler = false;\n\t        try {\n\t            // In cross site contexts (such as WebDriver frameworks like Selenium),\n\t            // accessing the handler object here will cause an exception to be thrown which\n\t            // will fail tests prematurely.\n\t            validZoneHandler = handler && handler.toString() === '[object FunctionWrapper]';\n\t        }\n\t        catch (e) {\n\t            // Returning nothing here is fine, because objects in a cross-site context are unusable\n\t            return;\n\t        }\n\t        // Ignore special listeners of IE11 & Edge dev tools, see\n\t        // https://github.com/angular/zone.js/issues/150\n\t        if (!delegate || validZoneHandler) {\n\t            return target[addFnSymbol](eventName, handler, useCapturing);\n\t        }\n\t        if (!allowDuplicates) {\n\t            var eventTask = findExistingRegisteredTask(target, handler, eventName, useCapturing, false);\n\t            if (eventTask) {\n\t                // we already registered, so this will have noop.\n\t                return target[addFnSymbol](eventName, eventTask.invoke, useCapturing);\n\t            }\n\t        }\n\t        var zone = Zone.current;\n\t        var source = target.constructor['name'] + '.' + addFnName + ':' + eventName;\n\t        var data = {\n\t            target: target,\n\t            eventName: eventName,\n\t            name: eventName,\n\t            useCapturing: useCapturing,\n\t            handler: handler\n\t        };\n\t        zone.scheduleEventTask(source, delegate, data, scheduleEventListener, cancelEventListener);\n\t    };\n\t}\n\tfunction makeZoneAwareRemoveListener(fnName, useCapturingParam) {\n\t    if (useCapturingParam === void 0) { useCapturingParam = true; }\n\t    var symbol = zoneSymbol(fnName);\n\t    var defaultUseCapturing = useCapturingParam ? false : undefined;\n\t    return function zoneAwareRemoveListener(self, args) {\n\t        var eventName = args[0];\n\t        var handler = args[1];\n\t        var useCapturing = args[2] || defaultUseCapturing;\n\t        // - Inside a Web Worker, `this` is undefined, the context is `global`\n\t        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n\t        // see https://github.com/angular/zone.js/issues/190\n\t        var target = self || _global$1;\n\t        var eventTask = findExistingRegisteredTask(target, handler, eventName, useCapturing, true);\n\t        if (eventTask) {\n\t            eventTask.zone.cancelTask(eventTask);\n\t        }\n\t        else {\n\t            target[symbol](eventName, handler, useCapturing);\n\t        }\n\t    };\n\t}\n\t\n\tvar zoneAwareAddEventListener = makeZoneAwareAddListener(ADD_EVENT_LISTENER, REMOVE_EVENT_LISTENER);\n\tvar zoneAwareRemoveEventListener = makeZoneAwareRemoveListener(REMOVE_EVENT_LISTENER);\n\tfunction patchEventTargetMethods(obj) {\n\t    if (obj && obj.addEventListener) {\n\t        patchMethod(obj, ADD_EVENT_LISTENER, function () { return zoneAwareAddEventListener; });\n\t        patchMethod(obj, REMOVE_EVENT_LISTENER, function () { return zoneAwareRemoveEventListener; });\n\t        return true;\n\t    }\n\t    else {\n\t        return false;\n\t    }\n\t}\n\tvar originalInstanceKey = zoneSymbol('originalInstance');\n\t// wrap some native API on `window`\n\tfunction patchClass(className) {\n\t    var OriginalClass = _global$1[className];\n\t    if (!OriginalClass)\n\t        return;\n\t    _global$1[className] = function () {\n\t        var a = bindArguments(arguments, className);\n\t        switch (a.length) {\n\t            case 0:\n\t                this[originalInstanceKey] = new OriginalClass();\n\t                break;\n\t            case 1:\n\t                this[originalInstanceKey] = new OriginalClass(a[0]);\n\t                break;\n\t            case 2:\n\t                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n\t                break;\n\t            case 3:\n\t                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n\t                break;\n\t            case 4:\n\t                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n\t                break;\n\t            default:\n\t                throw new Error('Arg list too long.');\n\t        }\n\t    };\n\t    var instance = new OriginalClass(function () { });\n\t    var prop;\n\t    for (prop in instance) {\n\t        // https://bugs.webkit.org/show_bug.cgi?id=44721\n\t        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n\t            continue;\n\t        (function (prop) {\n\t            if (typeof instance[prop] === 'function') {\n\t                _global$1[className].prototype[prop] = function () {\n\t                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n\t                };\n\t            }\n\t            else {\n\t                Object.defineProperty(_global$1[className].prototype, prop, {\n\t                    set: function (fn) {\n\t                        if (typeof fn === 'function') {\n\t                            this[originalInstanceKey][prop] = Zone.current.wrap(fn, className + '.' + prop);\n\t                        }\n\t                        else {\n\t                            this[originalInstanceKey][prop] = fn;\n\t                        }\n\t                    },\n\t                    get: function () {\n\t                        return this[originalInstanceKey][prop];\n\t                    }\n\t                });\n\t            }\n\t        }(prop));\n\t    }\n\t    for (prop in OriginalClass) {\n\t        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n\t            _global$1[className][prop] = OriginalClass[prop];\n\t        }\n\t    }\n\t}\n\t\n\tfunction createNamedFn(name, delegate) {\n\t    try {\n\t        return (Function('f', \"return function \" + name + \"(){return f(this, arguments)}\"))(delegate);\n\t    }\n\t    catch (e) {\n\t        // if we fail, we must be CSP, just return delegate.\n\t        return function () {\n\t            return delegate(this, arguments);\n\t        };\n\t    }\n\t}\n\tfunction patchMethod(target, name, patchFn) {\n\t    var proto = target;\n\t    while (proto && Object.getOwnPropertyNames(proto).indexOf(name) === -1) {\n\t        proto = Object.getPrototypeOf(proto);\n\t    }\n\t    if (!proto && target[name]) {\n\t        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n\t        proto = target;\n\t    }\n\t    var delegateName = zoneSymbol(name);\n\t    var delegate;\n\t    if (proto && !(delegate = proto[delegateName])) {\n\t        delegate = proto[delegateName] = proto[name];\n\t        proto[name] = createNamedFn(name, patchFn(delegate, delegateName, name));\n\t    }\n\t    return delegate;\n\t}\n\t\n\t/**\n\t * @license\n\t * Copyright Google Inc. All Rights Reserved.\n\t *\n\t * Use of this source code is governed by an MIT-style license that can be\n\t * found in the LICENSE file at https://angular.io/license\n\t */\n\tfunction patchTimer(window, setName, cancelName, nameSuffix) {\n\t    var setNative = null;\n\t    var clearNative = null;\n\t    setName += nameSuffix;\n\t    cancelName += nameSuffix;\n\t    var tasksByHandleId = {};\n\t    function scheduleTask(task) {\n\t        var data = task.data;\n\t        data.args[0] = function () {\n\t            task.invoke.apply(this, arguments);\n\t            delete tasksByHandleId[data.handleId];\n\t        };\n\t        data.handleId = setNative.apply(window, data.args);\n\t        tasksByHandleId[data.handleId] = task;\n\t        return task;\n\t    }\n\t    function clearTask(task) {\n\t        delete tasksByHandleId[task.data.handleId];\n\t        return clearNative(task.data.handleId);\n\t    }\n\t    setNative =\n\t        patchMethod(window, setName, function (delegate) { return function (self, args) {\n\t            if (typeof args[0] === 'function') {\n\t                var zone = Zone.current;\n\t                var options = {\n\t                    handleId: null,\n\t                    isPeriodic: nameSuffix === 'Interval',\n\t                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\n\t                    args: args\n\t                };\n\t                var task = zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);\n\t                if (!task) {\n\t                    return task;\n\t                }\n\t                // Node.js must additionally support the ref and unref functions.\n\t                var handle = task.data.handleId;\n\t                if (handle.ref && handle.unref) {\n\t                    task.ref = handle.ref.bind(handle);\n\t                    task.unref = handle.unref.bind(handle);\n\t                }\n\t                return task;\n\t            }\n\t            else {\n\t                // cause an error by calling it directly.\n\t                return delegate.apply(window, args);\n\t            }\n\t        }; });\n\t    clearNative =\n\t        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n\t            var task = typeof args[0] === 'number' ? tasksByHandleId[args[0]] : args[0];\n\t            if (task && typeof task.type === 'string') {\n\t                if (task.cancelFn && task.data.isPeriodic || task.runCount === 0) {\n\t                    // Do not cancel already canceled functions\n\t                    task.zone.cancelTask(task);\n\t                }\n\t            }\n\t            else {\n\t                // cause an error by calling it directly.\n\t                delegate.apply(window, args);\n\t            }\n\t        }; });\n\t}\n\t\n\t/**\n\t * @license\n\t * Copyright Google Inc. All Rights Reserved.\n\t *\n\t * Use of this source code is governed by an MIT-style license that can be\n\t * found in the LICENSE file at https://angular.io/license\n\t */\n\t/*\n\t * This is necessary for Chrome and Chrome mobile, to enable\n\t * things like redefining `createdCallback` on an element.\n\t */\n\tvar _defineProperty = Object[zoneSymbol('defineProperty')] = Object.defineProperty;\n\tvar _getOwnPropertyDescriptor = Object[zoneSymbol('getOwnPropertyDescriptor')] =\n\t    Object.getOwnPropertyDescriptor;\n\tvar _create = Object.create;\n\tvar unconfigurablesKey = zoneSymbol('unconfigurables');\n\tfunction propertyPatch() {\n\t    Object.defineProperty = function (obj, prop, desc) {\n\t        if (isUnconfigurable(obj, prop)) {\n\t            throw new TypeError('Cannot assign to read only property \\'' + prop + '\\' of ' + obj);\n\t        }\n\t        var originalConfigurableFlag = desc.configurable;\n\t        if (prop !== 'prototype') {\n\t            desc = rewriteDescriptor(obj, prop, desc);\n\t        }\n\t        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n\t    };\n\t    Object.defineProperties = function (obj, props) {\n\t        Object.keys(props).forEach(function (prop) {\n\t            Object.defineProperty(obj, prop, props[prop]);\n\t        });\n\t        return obj;\n\t    };\n\t    Object.create = function (obj, proto) {\n\t        if (typeof proto === 'object' && !Object.isFrozen(proto)) {\n\t            Object.keys(proto).forEach(function (prop) {\n\t                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);\n\t            });\n\t        }\n\t        return _create(obj, proto);\n\t    };\n\t    Object.getOwnPropertyDescriptor = function (obj, prop) {\n\t        var desc = _getOwnPropertyDescriptor(obj, prop);\n\t        if (isUnconfigurable(obj, prop)) {\n\t            desc.configurable = false;\n\t        }\n\t        return desc;\n\t    };\n\t}\n\t\n\tfunction _redefineProperty(obj, prop, desc) {\n\t    var originalConfigurableFlag = desc.configurable;\n\t    desc = rewriteDescriptor(obj, prop, desc);\n\t    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n\t}\n\t\n\tfunction isUnconfigurable(obj, prop) {\n\t    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];\n\t}\n\tfunction rewriteDescriptor(obj, prop, desc) {\n\t    desc.configurable = true;\n\t    if (!desc.configurable) {\n\t        if (!obj[unconfigurablesKey]) {\n\t            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\n\t        }\n\t        obj[unconfigurablesKey][prop] = true;\n\t    }\n\t    return desc;\n\t}\n\tfunction _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\n\t    try {\n\t        return _defineProperty(obj, prop, desc);\n\t    }\n\t    catch (e) {\n\t        if (desc.configurable) {\n\t            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\n\t            // retry with the original flag value\n\t            if (typeof originalConfigurableFlag == 'undefined') {\n\t                delete desc.configurable;\n\t            }\n\t            else {\n\t                desc.configurable = originalConfigurableFlag;\n\t            }\n\t            try {\n\t                return _defineProperty(obj, prop, desc);\n\t            }\n\t            catch (e) {\n\t                var descJson = null;\n\t                try {\n\t                    descJson = JSON.stringify(desc);\n\t                }\n\t                catch (e) {\n\t                    descJson = descJson.toString();\n\t                }\n\t                console.log(\"Attempting to configure '\" + prop + \"' with descriptor '\" + descJson + \"' on object '\" + obj + \"' and got error, giving up: \" + e);\n\t            }\n\t        }\n\t        else {\n\t            throw e;\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * @license\n\t * Copyright Google Inc. All Rights Reserved.\n\t *\n\t * Use of this source code is governed by an MIT-style license that can be\n\t * found in the LICENSE file at https://angular.io/license\n\t */\n\tvar WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';\n\tvar NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex'\n\t    .split(',');\n\tvar EVENT_TARGET = 'EventTarget';\n\tfunction eventTargetPatch(_global) {\n\t    var apis = [];\n\t    var isWtf = _global['wtf'];\n\t    if (isWtf) {\n\t        // Workaround for: https://github.com/google/tracing-framework/issues/555\n\t        apis = WTF_ISSUE_555.split(',').map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);\n\t    }\n\t    else if (_global[EVENT_TARGET]) {\n\t        apis.push(EVENT_TARGET);\n\t    }\n\t    else {\n\t        // Note: EventTarget is not available in all browsers,\n\t        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget\n\t        apis = NO_EVENT_TARGET;\n\t    }\n\t    for (var i = 0; i < apis.length; i++) {\n\t        var type = _global[apis[i]];\n\t        patchEventTargetMethods(type && type.prototype);\n\t    }\n\t}\n\t\n\t/**\n\t * @license\n\t * Copyright Google Inc. All Rights Reserved.\n\t *\n\t * Use of this source code is governed by an MIT-style license that can be\n\t * found in the LICENSE file at https://angular.io/license\n\t */\n\t// we have to patch the instance since the proto is non-configurable\n\tfunction apply(_global) {\n\t    var WS = _global.WebSocket;\n\t    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener\n\t    // On older Chrome, no need since EventTarget was already patched\n\t    if (!_global.EventTarget) {\n\t        patchEventTargetMethods(WS.prototype);\n\t    }\n\t    _global.WebSocket = function (a, b) {\n\t        var socket = arguments.length > 1 ? new WS(a, b) : new WS(a);\n\t        var proxySocket;\n\t        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance\n\t        var onmessageDesc = Object.getOwnPropertyDescriptor(socket, 'onmessage');\n\t        if (onmessageDesc && onmessageDesc.configurable === false) {\n\t            proxySocket = Object.create(socket);\n\t            ['addEventListener', 'removeEventListener', 'send', 'close'].forEach(function (propName) {\n\t                proxySocket[propName] = function () {\n\t                    return socket[propName].apply(socket, arguments);\n\t                };\n\t            });\n\t        }\n\t        else {\n\t            // we can patch the real socket\n\t            proxySocket = socket;\n\t        }\n\t        patchOnProperties(proxySocket, ['close', 'error', 'message', 'open']);\n\t        return proxySocket;\n\t    };\n\t    for (var prop in WS) {\n\t        _global.WebSocket[prop] = WS[prop];\n\t    }\n\t}\n\t\n\t/**\n\t * @license\n\t * Copyright Google Inc. All Rights Reserved.\n\t *\n\t * Use of this source code is governed by an MIT-style license that can be\n\t * found in the LICENSE file at https://angular.io/license\n\t */\n\tvar eventNames = 'copy cut paste abort blur focus canplay canplaythrough change click contextmenu dblclick drag dragend dragenter dragleave dragover dragstart drop durationchange emptied ended input invalid keydown keypress keyup load loadeddata loadedmetadata loadstart message mousedown mouseenter mouseleave mousemove mouseout mouseover mouseup pause play playing progress ratechange reset scroll seeked seeking select show stalled submit suspend timeupdate volumechange waiting mozfullscreenchange mozfullscreenerror mozpointerlockchange mozpointerlockerror error webglcontextrestored webglcontextlost webglcontextcreationerror'\n\t    .split(' ');\n\tfunction propertyDescriptorPatch(_global) {\n\t    if (isNode) {\n\t        return;\n\t    }\n\t    var supportsWebSocket = typeof WebSocket !== 'undefined';\n\t    if (canPatchViaPropertyDescriptor()) {\n\t        // for browsers that we can patch the descriptor:  Chrome & Firefox\n\t        if (isBrowser) {\n\t            patchOnProperties(HTMLElement.prototype, eventNames);\n\t        }\n\t        patchOnProperties(XMLHttpRequest.prototype, null);\n\t        if (typeof IDBIndex !== 'undefined') {\n\t            patchOnProperties(IDBIndex.prototype, null);\n\t            patchOnProperties(IDBRequest.prototype, null);\n\t            patchOnProperties(IDBOpenDBRequest.prototype, null);\n\t            patchOnProperties(IDBDatabase.prototype, null);\n\t            patchOnProperties(IDBTransaction.prototype, null);\n\t            patchOnProperties(IDBCursor.prototype, null);\n\t        }\n\t        if (supportsWebSocket) {\n\t            patchOnProperties(WebSocket.prototype, null);\n\t        }\n\t    }\n\t    else {\n\t        // Safari, Android browsers (Jelly Bean)\n\t        patchViaCapturingAllTheEvents();\n\t        patchClass('XMLHttpRequest');\n\t        if (supportsWebSocket) {\n\t            apply(_global);\n\t        }\n\t    }\n\t}\n\tfunction canPatchViaPropertyDescriptor() {\n\t    if (isBrowser && !Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&\n\t        typeof Element !== 'undefined') {\n\t        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364\n\t        // IDL interface attributes are not configurable\n\t        var desc = Object.getOwnPropertyDescriptor(Element.prototype, 'onclick');\n\t        if (desc && !desc.configurable)\n\t            return false;\n\t    }\n\t    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {\n\t        get: function () {\n\t            return true;\n\t        }\n\t    });\n\t    var req = new XMLHttpRequest();\n\t    var result = !!req.onreadystatechange;\n\t    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {});\n\t    return result;\n\t}\n\t\n\tvar unboundKey = zoneSymbol('unbound');\n\t// Whenever any eventListener fires, we check the eventListener target and all parents\n\t// for `onwhatever` properties and replace them with zone-bound functions\n\t// - Chrome (for now)\n\tfunction patchViaCapturingAllTheEvents() {\n\t    var _loop_1 = function(i) {\n\t        var property = eventNames[i];\n\t        var onproperty = 'on' + property;\n\t        self.addEventListener(property, function (event) {\n\t            var elt = event.target, bound, source;\n\t            if (elt) {\n\t                source = elt.constructor['name'] + '.' + onproperty;\n\t            }\n\t            else {\n\t                source = 'unknown.' + onproperty;\n\t            }\n\t            while (elt) {\n\t                if (elt[onproperty] && !elt[onproperty][unboundKey]) {\n\t                    bound = Zone.current.wrap(elt[onproperty], source);\n\t                    bound[unboundKey] = elt[onproperty];\n\t                    elt[onproperty] = bound;\n\t                }\n\t                elt = elt.parentElement;\n\t            }\n\t        }, true);\n\t    };\n\t    for (var i = 0; i < eventNames.length; i++) {\n\t        _loop_1(i);\n\t    }\n\t    \n\t}\n\t\n\t/**\n\t * @license\n\t * Copyright Google Inc. All Rights Reserved.\n\t *\n\t * Use of this source code is governed by an MIT-style license that can be\n\t * found in the LICENSE file at https://angular.io/license\n\t */\n\tfunction registerElementPatch(_global) {\n\t    if (!isBrowser || !('registerElement' in _global.document)) {\n\t        return;\n\t    }\n\t    var _registerElement = document.registerElement;\n\t    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];\n\t    document.registerElement = function (name, opts) {\n\t        if (opts && opts.prototype) {\n\t            callbacks.forEach(function (callback) {\n\t                var source = 'Document.registerElement::' + callback;\n\t                if (opts.prototype.hasOwnProperty(callback)) {\n\t                    var descriptor = Object.getOwnPropertyDescriptor(opts.prototype, callback);\n\t                    if (descriptor && descriptor.value) {\n\t                        descriptor.value = Zone.current.wrap(descriptor.value, source);\n\t                        _redefineProperty(opts.prototype, callback, descriptor);\n\t                    }\n\t                    else {\n\t                        opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);\n\t                    }\n\t                }\n\t                else if (opts.prototype[callback]) {\n\t                    opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);\n\t                }\n\t            });\n\t        }\n\t        return _registerElement.apply(document, [name, opts]);\n\t    };\n\t}\n\t\n\t/**\n\t * @license\n\t * Copyright Google Inc. All Rights Reserved.\n\t *\n\t * Use of this source code is governed by an MIT-style license that can be\n\t * found in the LICENSE file at https://angular.io/license\n\t */\n\tvar set = 'set';\n\tvar clear = 'clear';\n\tvar blockingMethods = ['alert', 'prompt', 'confirm'];\n\tvar _global = typeof window === 'object' && window || typeof self === 'object' && self || global;\n\tpatchTimer(_global, set, clear, 'Timeout');\n\tpatchTimer(_global, set, clear, 'Interval');\n\tpatchTimer(_global, set, clear, 'Immediate');\n\tpatchTimer(_global, 'request', 'cancel', 'AnimationFrame');\n\tpatchTimer(_global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n\tpatchTimer(_global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n\tfor (var i = 0; i < blockingMethods.length; i++) {\n\t    var name = blockingMethods[i];\n\t    patchMethod(_global, name, function (delegate, symbol, name) {\n\t        return function (s, args) {\n\t            return Zone.current.run(delegate, _global, args, name);\n\t        };\n\t    });\n\t}\n\teventTargetPatch(_global);\n\tpropertyDescriptorPatch(_global);\n\tpatchClass('MutationObserver');\n\tpatchClass('WebKitMutationObserver');\n\tpatchClass('FileReader');\n\tpropertyPatch();\n\tregisterElementPatch(_global);\n\t// Treat XMLHTTPRequest as a macrotask.\n\tpatchXHR(_global);\n\tvar XHR_TASK = zoneSymbol('xhrTask');\n\tvar XHR_SYNC = zoneSymbol('xhrSync');\n\tfunction patchXHR(window) {\n\t    function findPendingTask(target) {\n\t        var pendingTask = target[XHR_TASK];\n\t        return pendingTask;\n\t    }\n\t    function scheduleTask(task) {\n\t        var data = task.data;\n\t        data.target.addEventListener('readystatechange', function () {\n\t            if (data.target.readyState === data.target.DONE) {\n\t                if (!data.aborted) {\n\t                    task.invoke();\n\t                }\n\t            }\n\t        });\n\t        var storedTask = data.target[XHR_TASK];\n\t        if (!storedTask) {\n\t            data.target[XHR_TASK] = task;\n\t        }\n\t        sendNative.apply(data.target, data.args);\n\t        return task;\n\t    }\n\t    function placeholderCallback() { }\n\t    function clearTask(task) {\n\t        var data = task.data;\n\t        // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n\t        // to prevent it from firing. So instead, we store info for the event listener.\n\t        data.aborted = true;\n\t        return abortNative.apply(data.target, data.args);\n\t    }\n\t    var openNative = patchMethod(window.XMLHttpRequest.prototype, 'open', function () { return function (self, args) {\n\t        self[XHR_SYNC] = args[2] == false;\n\t        return openNative.apply(self, args);\n\t    }; });\n\t    var sendNative = patchMethod(window.XMLHttpRequest.prototype, 'send', function () { return function (self, args) {\n\t        var zone = Zone.current;\n\t        if (self[XHR_SYNC]) {\n\t            // if the XHR is sync there is no task to schedule, just execute the code.\n\t            return sendNative.apply(self, args);\n\t        }\n\t        else {\n\t            var options = { target: self, isPeriodic: false, delay: null, args: args, aborted: false };\n\t            return zone.scheduleMacroTask('XMLHttpRequest.send', placeholderCallback, options, scheduleTask, clearTask);\n\t        }\n\t    }; });\n\t    var abortNative = patchMethod(window.XMLHttpRequest.prototype, 'abort', function (delegate) { return function (self, args) {\n\t        var task = findPendingTask(self);\n\t        if (task && typeof task.type == 'string') {\n\t            // If the XHR has already completed, do nothing.\n\t            if (task.cancelFn == null) {\n\t                return;\n\t            }\n\t            task.zone.cancelTask(task);\n\t        }\n\t        // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no task\n\t        // to cancel. Do nothing.\n\t    }; });\n\t}\n\t/// GEO_LOCATION\n\tif (_global['navigator'] && _global['navigator'].geolocation) {\n\t    patchPrototype(_global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n\t}\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(35)))\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// polyfills.js"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n \t\tif(moreModules[0]) {\n \t\t\tinstalledModules[0] = 0;\n \t\t\treturn __webpack_require__(0);\n \t\t}\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t1:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".bundle.js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/angular2-ui-switch/example/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0f7006ff96cfae6a69ab","import 'reflect-metadata';\r\nimport 'zone.js/dist/zone';\n\n\n// WEBPACK FOOTER //\n// ./example/polyfills.ts","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    \"use strict\";\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n    // feature test for Object.create support\r\n    var supportsCreate = typeof Object.create === \"function\";\r\n    // feature test for __proto__ support\r\n    var supportsProto = { __proto__: [] } instanceof Array;\r\n    // feature test for Symbol support\r\n    var supportsSymbol = typeof Symbol === \"function\";\r\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n    // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n    var createDictionary = supportsCreate ? function () { return MakeDictionary(Object.create(null)); } :\r\n        supportsProto ? function () { return MakeDictionary({ __proto__: null }); } :\r\n            function () { return MakeDictionary({}); };\r\n    var HashMap;\r\n    (function (HashMap) {\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        HashMap.has = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key); }\r\n            : function (map, key) { return key in map; };\r\n        HashMap.get = downLevel\r\n            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n            : function (map, key) { return map[key]; };\r\n    })(HashMap || (HashMap = {}));\r\n    // Load global or shim versions of Map, Set, and WeakMap\r\n    var functionPrototype = Object.getPrototypeOf(Function);\r\n    var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n    var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n    var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n    // [[Metadata]] internal slot\r\n    var Metadata = new _WeakMap();\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param targetKey (Optional) The property key to decorate.\r\n      * @param targetDescriptor (Optional) The property descriptor for the target key\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    function decorate(decorators, target, targetKey, targetDescriptor) {\r\n        if (!IsUndefined(targetKey)) {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsObject(targetDescriptor) && !IsUndefined(targetDescriptor) && !IsNull(targetDescriptor))\r\n                throw new TypeError();\r\n            if (IsNull(targetDescriptor))\r\n                targetDescriptor = undefined;\r\n            targetKey = ToPropertyKey(targetKey);\r\n            return DecorateProperty(decorators, target, targetKey, targetDescriptor);\r\n        }\r\n        else {\r\n            if (!IsArray(decorators))\r\n                throw new TypeError();\r\n            if (!IsConstructor(target))\r\n                throw new TypeError();\r\n            return DecorateConstructor(decorators, target);\r\n        }\r\n    }\r\n    Reflect.decorate = decorate;\r\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\r\n    function metadata(metadataKey, metadataValue) {\r\n        function decorator(target, targetKey) {\r\n            if (!IsUndefined(targetKey)) {\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                targetKey = ToPropertyKey(targetKey);\r\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\r\n            }\r\n            else {\r\n                if (!IsConstructor(target))\r\n                    throw new TypeError();\r\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, /*targetKey*/ undefined);\r\n            }\r\n        }\r\n        return decorator;\r\n    }\r\n    Reflect.metadata = metadata;\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param targetKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    function defineMetadata(metadataKey, metadataValue, target, targetKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(targetKey))\r\n            targetKey = ToPropertyKey(targetKey);\r\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\r\n    }\r\n    Reflect.defineMetadata = defineMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param targetKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasMetadata(metadataKey, target, targetKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(targetKey))\r\n            targetKey = ToPropertyKey(targetKey);\r\n        return OrdinaryHasMetadata(metadataKey, target, targetKey);\r\n    }\r\n    Reflect.hasMetadata = hasMetadata;\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param targetKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function hasOwnMetadata(metadataKey, target, targetKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(targetKey))\r\n            targetKey = ToPropertyKey(targetKey);\r\n        return OrdinaryHasOwnMetadata(metadataKey, target, targetKey);\r\n    }\r\n    Reflect.hasOwnMetadata = hasOwnMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param targetKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadata(metadataKey, target, targetKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(targetKey))\r\n            targetKey = ToPropertyKey(targetKey);\r\n        return OrdinaryGetMetadata(metadataKey, target, targetKey);\r\n    }\r\n    Reflect.getMetadata = getMetadata;\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param targetKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadata(metadataKey, target, targetKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(targetKey))\r\n            targetKey = ToPropertyKey(targetKey);\r\n        return OrdinaryGetOwnMetadata(metadataKey, target, targetKey);\r\n    }\r\n    Reflect.getOwnMetadata = getOwnMetadata;\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param targetKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getMetadataKeys(target, targetKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(targetKey))\r\n            targetKey = ToPropertyKey(targetKey);\r\n        return OrdinaryMetadataKeys(target, targetKey);\r\n    }\r\n    Reflect.getMetadataKeys = getMetadataKeys;\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param targetKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function getOwnMetadataKeys(target, targetKey) {\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(targetKey))\r\n            targetKey = ToPropertyKey(targetKey);\r\n        return OrdinaryOwnMetadataKeys(target, targetKey);\r\n    }\r\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param targetKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    function deleteMetadata(metadataKey, target, targetKey) {\r\n        // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#deletemetadata-metadatakey-p-\r\n        if (!IsObject(target))\r\n            throw new TypeError();\r\n        if (!IsUndefined(targetKey))\r\n            targetKey = ToPropertyKey(targetKey);\r\n        var metadataMap = GetOrCreateMetadataMap(target, targetKey, /*create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        if (!metadataMap.delete(metadataKey))\r\n            return false;\r\n        if (metadataMap.size > 0)\r\n            return true;\r\n        var targetMetadata = Metadata.get(target);\r\n        targetMetadata.delete(targetKey);\r\n        if (targetMetadata.size > 0)\r\n            return true;\r\n        Metadata.delete(target);\r\n        return true;\r\n    }\r\n    Reflect.deleteMetadata = deleteMetadata;\r\n    function DecorateConstructor(decorators, target) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsConstructor(decorated))\r\n                    throw new TypeError();\r\n                target = decorated;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n        for (var i = decorators.length - 1; i >= 0; --i) {\r\n            var decorator = decorators[i];\r\n            var decorated = decorator(target, propertyKey, descriptor);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsObject(decorated))\r\n                    throw new TypeError();\r\n                descriptor = decorated;\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n    function GetOrCreateMetadataMap(O, P, Create) {\r\n        var targetMetadata = Metadata.get(O);\r\n        if (IsUndefined(targetMetadata)) {\r\n            if (!Create)\r\n                return undefined;\r\n            targetMetadata = new _Map();\r\n            Metadata.set(O, targetMetadata);\r\n        }\r\n        var metadataMap = targetMetadata.get(P);\r\n        if (IsUndefined(metadataMap)) {\r\n            if (!Create)\r\n                return undefined;\r\n            metadataMap = new _Map();\r\n            targetMetadata.set(P, metadataMap);\r\n        }\r\n        return metadataMap;\r\n    }\r\n    // Ordinary Object Internal Methods and Internal Slots\r\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinary-object-internal-methods-and-internal-slots\r\n    // OrdinaryHasMetadata(MetadataKey, O, P)\r\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinaryhasmetadata--metadatakey-o-p-\r\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return true;\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n        return false;\r\n    }\r\n    // OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinaryhasownmetadata--metadatakey-o-p-\r\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return false;\r\n        return ToBoolean(metadataMap.has(MetadataKey));\r\n    }\r\n    // OrdinaryGetMetadata(MetadataKey, O, P)\r\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarygetmetadata--metadatakey-o-p-\r\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn)\r\n            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent))\r\n            return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n        return undefined;\r\n    }\r\n    // OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarygetownmetadata--metadatakey-o-p-\r\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);\r\n        if (IsUndefined(metadataMap))\r\n            return undefined;\r\n        return metadataMap.get(MetadataKey);\r\n    }\r\n    // OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarydefineownmetadata--metadatakey-metadatavalue-o-p-\r\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ true);\r\n        metadataMap.set(MetadataKey, MetadataValue);\r\n    }\r\n    // OrdinaryMetadataKeys(O, P)\r\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarymetadatakeys--o-p-\r\n    function OrdinaryMetadataKeys(O, P) {\r\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n        var parent = OrdinaryGetPrototypeOf(O);\r\n        if (parent === null)\r\n            return ownKeys;\r\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n        if (parentKeys.length <= 0)\r\n            return ownKeys;\r\n        if (ownKeys.length <= 0)\r\n            return parentKeys;\r\n        var set = new _Set();\r\n        var keys = [];\r\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n            var key = ownKeys_1[_i];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n            var key = parentKeys_1[_a];\r\n            var hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    // OrdinaryOwnMetadataKeys(O, P)\r\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinaryownmetadatakeys--o-p-\r\n    function OrdinaryOwnMetadataKeys(O, P) {\r\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);\r\n        var keys = [];\r\n        if (IsUndefined(metadataMap))\r\n            return keys;\r\n        var keysObj = metadataMap.keys();\r\n        var iterator = GetIterator(keysObj);\r\n        while (true) {\r\n            var next = IteratorStep(iterator);\r\n            try {\r\n                if (!next)\r\n                    return keys;\r\n                var nextValue = IteratorValue(next);\r\n                keys.push(nextValue);\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    if (next) {\r\n                        next = false;\r\n                        IteratorClose(iterator);\r\n                    }\r\n                }\r\n                finally {\r\n                    throw e;\r\n                }\r\n            }\r\n            finally {\r\n                if (next)\r\n                    IteratorClose(iterator);\r\n            }\r\n        }\r\n    }\r\n    // ECMAScript Specification\r\n    // https://tc39.github.io/ecma262/\r\n    // 6 ECMAScript Data Typ0es and Values\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n    function Type(x) {\r\n        if (x === null)\r\n            return 1 /* Null */;\r\n        switch (typeof x) {\r\n            case \"undefined\": return 0 /* Undefined */;\r\n            case \"boolean\": return 2 /* Boolean */;\r\n            case \"string\": return 3 /* String */;\r\n            case \"symbol\": return 4 /* Symbol */;\r\n            case \"number\": return 5 /* Number */;\r\n            case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n            default: return 6 /* Object */;\r\n        }\r\n    }\r\n    // 6.1.1 The Undefined Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n    function IsUndefined(x) {\r\n        return x === undefined;\r\n    }\r\n    // 6.1.2 The Null Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n    function IsNull(x) {\r\n        return x === null;\r\n    }\r\n    // 6.1.5 The Symbol Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n    function IsSymbol(x) {\r\n        return typeof x === \"symbol\";\r\n    }\r\n    // 6.1.7 The Object Type\r\n    // https://tc39.github.io/ecma262/#sec-object-type\r\n    function IsObject(x) {\r\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n    }\r\n    // 7.1 Type Conversion\r\n    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n    function ToPrimitive(input, PreferredType) {\r\n        switch (Type(input)) {\r\n            case 0 /* Undefined */: return input;\r\n            case 1 /* Null */: return input;\r\n            case 2 /* Boolean */: return input;\r\n            case 3 /* String */: return input;\r\n            case 4 /* Symbol */: return input;\r\n            case 5 /* Number */: return input;\r\n        }\r\n        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n        if (exoticToPrim !== undefined) {\r\n            var result = exoticToPrim.call(input, hint);\r\n            if (IsObject(result))\r\n                throw new TypeError();\r\n            return result;\r\n        }\r\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n    }\r\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n    function OrdinaryToPrimitive(O, hint) {\r\n        if (hint === \"string\") {\r\n            var toString_1 = O.toString;\r\n            if (IsCallable(toString_1)) {\r\n                var result = toString_1.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        else {\r\n            var valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                var result = valueOf.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n            var toString_2 = O.toString;\r\n            if (IsCallable(toString_2)) {\r\n                var result = toString_2.call(O);\r\n                if (!IsObject(result))\r\n                    return result;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n    // 7.1.2 ToBoolean(argument)\r\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n    function ToBoolean(argument) {\r\n        return !!argument;\r\n    }\r\n    // 7.1.12 ToString(argument)\r\n    // https://tc39.github.io/ecma262/#sec-tostring\r\n    function ToString(argument) {\r\n        return \"\" + argument;\r\n    }\r\n    // 7.1.14 ToPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n    function ToPropertyKey(argument) {\r\n        var key = ToPrimitive(argument, 3 /* String */);\r\n        if (IsSymbol(key))\r\n            return key;\r\n        return ToString(key);\r\n    }\r\n    // 7.2 Testing and Comparison Operations\r\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n    // 7.2.2 IsArray(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isarray\r\n    function IsArray(argument) {\r\n        return Array.isArray\r\n            ? Array.isArray(argument)\r\n            : argument instanceof Object\r\n                ? argument instanceof Array\r\n                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n    }\r\n    // 7.2.3 IsCallable(argument)\r\n    // https://tc39.github.io/ecma262/#sec-iscallable\r\n    function IsCallable(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.2.4 IsConstructor(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n    function IsConstructor(argument) {\r\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n    // 7.3 Operations on Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n    // 7.3.9 GetMethod(V, P)\r\n    // https://tc39.github.io/ecma262/#sec-getmethod\r\n    function GetMethod(V, P) {\r\n        var func = V[P];\r\n        if (func === undefined || func === null)\r\n            return undefined;\r\n        if (!IsCallable(func))\r\n            throw new TypeError();\r\n        return func;\r\n    }\r\n    // 7.4 Operations on Iterator Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n    function GetIterator(obj) {\r\n        var method = GetMethod(obj, iteratorSymbol);\r\n        if (!IsCallable(method))\r\n            throw new TypeError(); // from Call\r\n        var iterator = method.call(obj);\r\n        if (!IsObject(iterator))\r\n            throw new TypeError();\r\n        return iterator;\r\n    }\r\n    // 7.4.4 IteratorValue(iterResult)\r\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n    function IteratorValue(iterResult) {\r\n        return iterResult.value;\r\n    }\r\n    // 7.4.5 IteratorStep(iterator)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n    function IteratorStep(iterator) {\r\n        var result = iterator.next();\r\n        return result.done ? false : result;\r\n    }\r\n    // 7.4.6 IteratorClose(iterator, completion)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n    function IteratorClose(iterator) {\r\n        var f = iterator[\"return\"];\r\n        if (f)\r\n            f.call(iterator);\r\n    }\r\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n    function OrdinaryGetPrototypeOf(O) {\r\n        var proto = Object.getPrototypeOf(O);\r\n        if (typeof O !== \"function\" || O === functionPrototype)\r\n            return proto;\r\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n        // Try to determine the superclass constructor. Compatible implementations\r\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n        // or ensure each class has a valid `constructor` property on its prototype that\r\n        // points back to the constructor.\r\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n        if (proto !== functionPrototype)\r\n            return proto;\r\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n        var prototype = O.prototype;\r\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n        if (prototypeProto == null || prototypeProto === Object.prototype)\r\n            return proto;\r\n        // If the constructor was not a function, then we cannot determine the heritage.\r\n        var constructor = prototypeProto.constructor;\r\n        if (typeof constructor !== \"function\")\r\n            return proto;\r\n        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n        if (constructor === O)\r\n            return proto;\r\n        // we have a pretty good guess at the heritage.\r\n        return constructor;\r\n    }\r\n    // naive Map shim\r\n    function CreateMapPolyfill() {\r\n        var cacheSentinel = {};\r\n        var arraySentinel = [];\r\n        var MapIterator = (function () {\r\n            function MapIterator(keys, values, selector) {\r\n                this._index = 0;\r\n                this._keys = keys;\r\n                this._values = values;\r\n                this._selector = selector;\r\n            }\r\n            MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n            MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n            MapIterator.prototype.next = function () {\r\n                var index = this._index;\r\n                if (index >= 0 && index < this._keys.length) {\r\n                    var result = this._selector(this._keys[index], this._values[index]);\r\n                    if (index + 1 >= this._keys.length) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    else {\r\n                        this._index++;\r\n                    }\r\n                    return { value: result, done: false };\r\n                }\r\n                return { value: undefined, done: true };\r\n            };\r\n            MapIterator.prototype.throw = function (error) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                throw error;\r\n            };\r\n            MapIterator.prototype.return = function (value) {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                return { value: value, done: true };\r\n            };\r\n            return MapIterator;\r\n        }());\r\n        return (function () {\r\n            function Map() {\r\n                this._keys = [];\r\n                this._values = [];\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            }\r\n            Object.defineProperty(Map.prototype, \"size\", {\r\n                get: function () { return this._keys.length; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n            Map.prototype.get = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                return index >= 0 ? this._values[index] : undefined;\r\n            };\r\n            Map.prototype.set = function (key, value) {\r\n                var index = this._find(key, /*insert*/ true);\r\n                this._values[index] = value;\r\n                return this;\r\n            };\r\n            Map.prototype.delete = function (key) {\r\n                var index = this._find(key, /*insert*/ false);\r\n                if (index >= 0) {\r\n                    var size = this._keys.length;\r\n                    for (var i = index + 1; i < size; i++) {\r\n                        this._keys[i - 1] = this._keys[i];\r\n                        this._values[i - 1] = this._values[i];\r\n                    }\r\n                    this._keys.length--;\r\n                    this._values.length--;\r\n                    if (key === this._cacheKey) {\r\n                        this._cacheKey = cacheSentinel;\r\n                        this._cacheIndex = -2;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            Map.prototype.clear = function () {\r\n                this._keys.length = 0;\r\n                this._values.length = 0;\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            };\r\n            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n            Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n            Map.prototype._find = function (key, insert) {\r\n                if (this._cacheKey === key)\r\n                    return this._cacheIndex;\r\n                var index = this._keys.indexOf(key);\r\n                if (index < 0 && insert) {\r\n                    index = this._keys.length;\r\n                    this._keys.push(key);\r\n                    this._values.push(undefined);\r\n                }\r\n                return this._cacheKey = key, this._cacheIndex = index;\r\n            };\r\n            return Map;\r\n        }());\r\n        function getKey(key, _) {\r\n            return key;\r\n        }\r\n        function getValue(_, value) {\r\n            return value;\r\n        }\r\n        function getEntry(key, value) {\r\n            return [key, value];\r\n        }\r\n    }\r\n    // naive Set shim\r\n    function CreateSetPolyfill() {\r\n        return (function () {\r\n            function Set() {\r\n                this._map = new _Map();\r\n            }\r\n            Object.defineProperty(Set.prototype, \"size\", {\r\n                get: function () { return this._map.size; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Set.prototype.has = function (value) { return this._map.has(value); };\r\n            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n            Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n            Set.prototype.clear = function () { this._map.clear(); };\r\n            Set.prototype.keys = function () { return this._map.keys(); };\r\n            Set.prototype.values = function () { return this._map.values(); };\r\n            Set.prototype.entries = function () { return this._map.entries(); };\r\n            Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n            return Set;\r\n        }());\r\n    }\r\n    // naive WeakMap shim\r\n    function CreateWeakMapPolyfill() {\r\n        var UUID_SIZE = 16;\r\n        var keys = createDictionary();\r\n        var rootKey = CreateUniqueKey();\r\n        return (function () {\r\n            function WeakMap() {\r\n                this._key = CreateUniqueKey();\r\n            }\r\n            WeakMap.prototype.has = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n            };\r\n            WeakMap.prototype.get = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n            };\r\n            WeakMap.prototype.set = function (target, value) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                table[this._key] = value;\r\n                return this;\r\n            };\r\n            WeakMap.prototype.delete = function (target) {\r\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                return table !== undefined ? delete table[this._key] : false;\r\n            };\r\n            WeakMap.prototype.clear = function () {\r\n                // NOTE: not a real clear, just makes the previous data unreachable\r\n                this._key = CreateUniqueKey();\r\n            };\r\n            return WeakMap;\r\n        }());\r\n        function CreateUniqueKey() {\r\n            var key;\r\n            do\r\n                key = \"@@WeakMap@@\" + CreateUUID();\r\n            while (HashMap.has(keys, key));\r\n            keys[key] = true;\r\n            return key;\r\n        }\r\n        function GetOrCreateWeakMapTable(target, create) {\r\n            if (!hasOwn.call(target, rootKey)) {\r\n                if (!create)\r\n                    return undefined;\r\n                Object.defineProperty(target, rootKey, { value: createDictionary() });\r\n            }\r\n            return target[rootKey];\r\n        }\r\n        function FillRandomBytes(buffer, size) {\r\n            for (var i = 0; i < size; ++i)\r\n                buffer[i] = Math.random() * 0xff | 0;\r\n            return buffer;\r\n        }\r\n        function GenRandomBytes(size) {\r\n            if (typeof Uint8Array === \"function\") {\r\n                if (typeof crypto !== \"undefined\")\r\n                    return crypto.getRandomValues(new Uint8Array(size));\r\n                if (typeof msCrypto !== \"undefined\")\r\n                    return msCrypto.getRandomValues(new Uint8Array(size));\r\n                return FillRandomBytes(new Uint8Array(size), size);\r\n            }\r\n            return FillRandomBytes(new Array(size), size);\r\n        }\r\n        function CreateUUID() {\r\n            var data = GenRandomBytes(UUID_SIZE);\r\n            // mark as random - RFC 4122 § 4.4\r\n            data[6] = data[6] & 0x4f | 0x40;\r\n            data[8] = data[8] & 0xbf | 0x80;\r\n            var result = \"\";\r\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                var byte = data[offset];\r\n                if (offset === 4 || offset === 6 || offset === 8)\r\n                    result += \"-\";\r\n                if (byte < 16)\r\n                    result += \"0\";\r\n                result += byte.toString(16).toLowerCase();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n    function MakeDictionary(obj) {\r\n        obj.__ = undefined;\r\n        delete obj.__;\r\n        return obj;\r\n    }\r\n    // patch global Reflect\r\n    (function (__global) {\r\n        if (typeof __global.Reflect !== \"undefined\") {\r\n            if (__global.Reflect !== Reflect) {\r\n                for (var p in Reflect) {\r\n                    if (hasOwn.call(Reflect, p)) {\r\n                        __global.Reflect[p] = Reflect[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            __global.Reflect = Reflect;\r\n        }\r\n    })(typeof global !== \"undefined\" ? global :\r\n        typeof self !== \"undefined\" ? self :\r\n            Function(\"return this;\")());\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reflect-metadata/Reflect.js\n// module id = 33\n// module chunks = 1","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar Zone$1 = (function (global) {\n    if (global.Zone) {\n        throw new Error('Zone already loaded.');\n    }\n    var Zone = (function () {\n        function Zone(parent, zoneSpec) {\n            this._properties = null;\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        Zone.assertZonePatched = function () {\n            if (global.Promise !== ZoneAwarePromise) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        };\n        Object.defineProperty(Zone, \"current\", {\n            get: function () {\n                return _currentZone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone, \"currentTask\", {\n            get: function () {\n                return _currentTask;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone.prototype, \"parent\", {\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone.prototype, \"name\", {\n            get: function () {\n                return this._name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Zone.prototype.get = function (key) {\n            var zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        };\n        Zone.prototype.getZoneWith = function (key) {\n            var current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        };\n        Zone.prototype.fork = function (zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        };\n        Zone.prototype.wrap = function (callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\n            var zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        };\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            var oldZone = _currentZone;\n            _currentZone = this;\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZone = oldZone;\n            }\n        };\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            var oldZone = _currentZone;\n            _currentZone = this;\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZone = oldZone;\n            }\n        };\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\n            task.runCount++;\n            if (task.zone != this)\n                throw new Error('A task can only be run in the zone which created it! (Creation: ' + task.zone.name +\n                    '; Execution: ' + this.name + ')');\n            var previousTask = _currentTask;\n            _currentTask = task;\n            var oldZone = _currentZone;\n            _currentZone = this;\n            try {\n                if (task.type == 'macroTask' && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = null;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZone = oldZone;\n                _currentTask = previousTask;\n            }\n        };\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('microTask', this, source, callback, data, customSchedule, null));\n        };\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('macroTask', this, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('eventTask', this, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.cancelTask = function (task) {\n            var value = this._zoneDelegate.cancelTask(this, task);\n            task.runCount = -1;\n            task.cancelFn = null;\n            return value;\n        };\n        Zone.__symbol__ = __symbol__;\n        return Zone;\n    }());\n    \n    var ZoneDelegate = (function () {\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { microTask: 0, macroTask: 0, eventTask: 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._hasTaskZS = zoneSpec && (zoneSpec.onHasTask ? zoneSpec : parentDelegate._hasTaskZS);\n            this._hasTaskDlgt =\n                zoneSpec && (zoneSpec.onHasTask ? parentDelegate : parentDelegate._hasTaskDlgt);\n        }\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        };\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this.zone, targetZone, callback, source) :\n                callback;\n        };\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ?\n                this._invokeZS.onInvoke(this._invokeDlgt, this.zone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this.zone, targetZone, error) :\n                true;\n        };\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n            try {\n                if (this._scheduleTaskZS) {\n                    return this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this.zone, targetZone, task);\n                }\n                else if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == 'microTask') {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n                return task;\n            }\n            finally {\n                if (targetZone == this.zone) {\n                    this._updateTaskCount(task.type, 1);\n                }\n            }\n        };\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n            try {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this.zone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            finally {\n                if (targetZone == this.zone && (task.type != 'eventTask') &&\n                    !(task.data && task.data.isPeriodic)) {\n                    this._updateTaskCount(task.type, -1);\n                }\n            }\n        };\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n            var value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this.zone, targetZone, task);\n            }\n            else if (!task.cancelFn) {\n                throw new Error('Task does not support cancellation, or is already canceled.');\n            }\n            else {\n                value = task.cancelFn(task);\n            }\n            if (targetZone == this.zone) {\n                // this should not be in the finally block, because exceptions assume not canceled.\n                this._updateTaskCount(task.type, -1);\n            }\n            return value;\n        };\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n            return this._hasTaskZS &&\n                this._hasTaskZS.onHasTask(this._hasTaskDlgt, this.zone, targetZone, isEmpty);\n        };\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n            var counts = this._taskCounts;\n            var prev = counts[type];\n            var next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                var isEmpty = {\n                    microTask: counts.microTask > 0,\n                    macroTask: counts.macroTask > 0,\n                    eventTask: counts.eventTask > 0,\n                    change: type\n                };\n                try {\n                    this.hasTask(this.zone, isEmpty);\n                }\n                finally {\n                    if (this._parentDelegate) {\n                        this._parentDelegate._updateTaskCount(type, count);\n                    }\n                }\n            }\n        };\n        return ZoneDelegate;\n    }());\n    var ZoneTask = (function () {\n        function ZoneTask(type, zone, source, callback, options, scheduleFn, cancelFn) {\n            this.runCount = 0;\n            this.type = type;\n            this.zone = zone;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            var self = this;\n            this.invoke = function () {\n                _numberOfNestedTaskFrames++;\n                try {\n                    return zone.runTask(self, this, arguments);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            };\n        }\n        ZoneTask.prototype.toString = function () {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId;\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        };\n        return ZoneTask;\n    }());\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    \n    var symbolSetTimeout = __symbol__('setTimeout');\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var _currentZone = new Zone(null, null);\n    var _currentTask = null;\n    var _microTaskQueue = [];\n    var _isDrainingMicrotaskQueue = false;\n    var _uncaughtPromiseErrors = [];\n    var _numberOfNestedTaskFrames = 0;\n    function scheduleQueueDrain() {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames == 0 && _microTaskQueue.length == 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (global[symbolPromise]) {\n                global[symbolPromise].resolve(0)[symbolThen](drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n    }\n    function scheduleMicroTask(task) {\n        scheduleQueueDrain();\n        _microTaskQueue.push(task);\n    }\n    function consoleError(e) {\n        var rejection = e && e.rejection;\n        if (rejection) {\n            console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n        }\n        console.error(e);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                var queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (var i = 0; i < queue.length; i++) {\n                    var task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (e) {\n                        consoleError(e);\n                    }\n                }\n            }\n            while (_uncaughtPromiseErrors.length) {\n                var _loop_1 = function() {\n                    var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(function () {\n                            throw uncaughtPromiseError;\n                        });\n                    }\n                    catch (e) {\n                        consoleError(e);\n                    }\n                };\n                while (_uncaughtPromiseErrors.length) {\n                    _loop_1();\n                }\n            }\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    var symbolState = __symbol__('state');\n    var symbolValue = __symbol__('value');\n    var source = 'Promise.then';\n    var UNRESOLVED = null;\n    var RESOLVED = true;\n    var REJECTED = false;\n    var REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return function (v) {\n            resolvePromise(promise, state, v);\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    function resolvePromise(promise, state, value) {\n        if (promise[symbolState] === UNRESOLVED) {\n            if (value instanceof ZoneAwarePromise && value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (isThenable(value)) {\n                value.then(makeResolver(promise, state), makeResolver(promise, false));\n            }\n            else {\n                promise[symbolState] = state;\n                var queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                for (var i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        throw new Error('Uncaught (in promise): ' + value +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (e) {\n                        var error_1 = e;\n                        error_1.rejection = value;\n                        error_1.promise = promise;\n                        error_1.zone = Zone.current;\n                        error_1.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error_1);\n                        scheduleQueueDrain();\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            promise[symbolState] = REJECTED;\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        var delegate = promise[symbolState] ? onFulfilled || forwardResolution : onRejected || forwardRejection;\n        zone.scheduleMicroTask(source, function () {\n            try {\n                resolvePromise(chainPromise, true, zone.run(delegate, null, [promise[symbolValue]]));\n            }\n            catch (error) {\n                resolvePromise(chainPromise, false, error);\n            }\n        });\n    }\n    var ZoneAwarePromise = (function () {\n        function ZoneAwarePromise(executor) {\n            var promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (e) {\n                resolvePromise(promise, false, e);\n            }\n        }\n        ZoneAwarePromise.resolve = function (value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        };\n        ZoneAwarePromise.reject = function (error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        };\n        ZoneAwarePromise.race = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                _a = [res, rej], resolve = _a[0], reject = _a[1];\n                var _a;\n            });\n            function onResolve(value) {\n                promise && (promise = null || resolve(value));\n            }\n            function onReject(error) {\n                promise && (promise = null || reject(error));\n            }\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                var value = values_1[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        };\n        ZoneAwarePromise.all = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var count = 0;\n            var resolvedValues = [];\n            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\n                var value = values_2[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then((function (index) { return function (value) {\n                    resolvedValues[index] = value;\n                    count--;\n                    if (!count) {\n                        resolve(resolvedValues);\n                    }\n                }; })(count), reject);\n                count++;\n            }\n            if (!count)\n                resolve(resolvedValues);\n            return promise;\n        };\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n            var chainPromise = new this.constructor(null);\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        };\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\n            return this.then(null, onRejected);\n        };\n        return ZoneAwarePromise;\n    }());\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    var NativePromise = global[__symbol__('Promise')] = global.Promise;\n    global.Promise = ZoneAwarePromise;\n    function patchThen(NativePromise) {\n        var NativePromiseProtototype = NativePromise.prototype;\n        var NativePromiseThen = NativePromiseProtototype[__symbol__('then')] =\n            NativePromiseProtototype.then;\n        NativePromiseProtototype.then = function (onResolve, onReject) {\n            var nativePromise = this;\n            return new ZoneAwarePromise(function (resolve, reject) {\n                NativePromiseThen.call(nativePromise, resolve, reject);\n            })\n                .then(onResolve, onReject);\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        if (typeof global['fetch'] !== 'undefined') {\n            var fetchPromise = void 0;\n            try {\n                // In MS Edge this throws\n                fetchPromise = global['fetch']();\n            }\n            catch (e) {\n                // In Chrome this throws instead.\n                fetchPromise = global['fetch']('about:blank');\n            }\n            // ignore output to prevent error;\n            fetchPromise.then(function () { return null; }, function () { return null; });\n            if (fetchPromise.constructor != NativePromise &&\n                fetchPromise.constructor != ZoneAwarePromise) {\n                patchThen(fetchPromise.constructor);\n            }\n        }\n    }\n    // This is not part of public API, but it is usefull for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return global.Zone = Zone;\n})(typeof window === 'object' && window || typeof self === 'object' && self || global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar zoneSymbol = Zone['__symbol__'];\nvar _global$1 = typeof window === 'object' && window || typeof self === 'object' && self || global;\nfunction bindArguments(args, source) {\n    for (var i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = Zone.current.wrap(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\n\nfunction patchPrototype(prototype, fnNames) {\n    var source = prototype.constructor['name'];\n    var _loop_1 = function(i) {\n        var name_1 = fnNames[i];\n        var delegate = prototype[name_1];\n        if (delegate) {\n            prototype[name_1] = (function (delegate) {\n                return function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));\n                };\n            })(delegate);\n        }\n    };\n    for (var i = 0; i < fnNames.length; i++) {\n        _loop_1(i);\n    }\n}\n\nvar isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\nvar isNode = (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]');\nvar isBrowser = !isNode && !isWebWorker && !!(typeof window !== 'undefined' && window['HTMLElement']);\nfunction patchProperty(obj, prop) {\n    var desc = Object.getOwnPropertyDescriptor(obj, prop) || { enumerable: true, configurable: true };\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    var eventName = prop.substr(2);\n    var _prop = '_' + prop;\n    desc.set = function (fn) {\n        if (this[_prop]) {\n            this.removeEventListener(eventName, this[_prop]);\n        }\n        if (typeof fn === 'function') {\n            var wrapFn = function (event) {\n                var result;\n                result = fn.apply(this, arguments);\n                if (result != undefined && !result)\n                    event.preventDefault();\n            };\n            this[_prop] = wrapFn;\n            this.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            this[_prop] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        return this[_prop] || null;\n    };\n    Object.defineProperty(obj, prop, desc);\n}\n\nfunction patchOnProperties(obj, properties) {\n    var onProperties = [];\n    for (var prop in obj) {\n        if (prop.substr(0, 2) == 'on') {\n            onProperties.push(prop);\n        }\n    }\n    for (var j = 0; j < onProperties.length; j++) {\n        patchProperty(obj, onProperties[j]);\n    }\n    if (properties) {\n        for (var i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i]);\n        }\n    }\n}\n\nvar EVENT_TASKS = zoneSymbol('eventTasks');\n// For EventTarget\nvar ADD_EVENT_LISTENER = 'addEventListener';\nvar REMOVE_EVENT_LISTENER = 'removeEventListener';\nfunction findExistingRegisteredTask(target, handler, name, capture, remove) {\n    var eventTasks = target[EVENT_TASKS];\n    if (eventTasks) {\n        for (var i = 0; i < eventTasks.length; i++) {\n            var eventTask = eventTasks[i];\n            var data = eventTask.data;\n            if (data.handler === handler && data.useCapturing === capture && data.eventName === name) {\n                if (remove) {\n                    eventTasks.splice(i, 1);\n                }\n                return eventTask;\n            }\n        }\n    }\n    return null;\n}\nfunction attachRegisteredEvent(target, eventTask) {\n    var eventTasks = target[EVENT_TASKS];\n    if (!eventTasks) {\n        eventTasks = target[EVENT_TASKS] = [];\n    }\n    eventTasks.push(eventTask);\n}\nfunction makeZoneAwareAddListener(addFnName, removeFnName, useCapturingParam, allowDuplicates) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    if (allowDuplicates === void 0) { allowDuplicates = false; }\n    var addFnSymbol = zoneSymbol(addFnName);\n    var removeFnSymbol = zoneSymbol(removeFnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    function scheduleEventListener(eventTask) {\n        var meta = eventTask.data;\n        attachRegisteredEvent(meta.target, eventTask);\n        return meta.target[addFnSymbol](meta.eventName, eventTask.invoke, meta.useCapturing);\n    }\n    function cancelEventListener(eventTask) {\n        var meta = eventTask.data;\n        findExistingRegisteredTask(meta.target, eventTask.invoke, meta.eventName, meta.useCapturing, true);\n        meta.target[removeFnSymbol](meta.eventName, eventTask.invoke, meta.useCapturing);\n    }\n    return function zoneAwareAddListener(self, args) {\n        var eventName = args[0];\n        var handler = args[1];\n        var useCapturing = args[2] || defaultUseCapturing;\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n        // see https://github.com/angular/zone.js/issues/190\n        var target = self || _global$1;\n        var delegate = null;\n        if (typeof handler == 'function') {\n            delegate = handler;\n        }\n        else if (handler && handler.handleEvent) {\n            delegate = function (event) { return handler.handleEvent(event); };\n        }\n        var validZoneHandler = false;\n        try {\n            // In cross site contexts (such as WebDriver frameworks like Selenium),\n            // accessing the handler object here will cause an exception to be thrown which\n            // will fail tests prematurely.\n            validZoneHandler = handler && handler.toString() === '[object FunctionWrapper]';\n        }\n        catch (e) {\n            // Returning nothing here is fine, because objects in a cross-site context are unusable\n            return;\n        }\n        // Ignore special listeners of IE11 & Edge dev tools, see\n        // https://github.com/angular/zone.js/issues/150\n        if (!delegate || validZoneHandler) {\n            return target[addFnSymbol](eventName, handler, useCapturing);\n        }\n        if (!allowDuplicates) {\n            var eventTask = findExistingRegisteredTask(target, handler, eventName, useCapturing, false);\n            if (eventTask) {\n                // we already registered, so this will have noop.\n                return target[addFnSymbol](eventName, eventTask.invoke, useCapturing);\n            }\n        }\n        var zone = Zone.current;\n        var source = target.constructor['name'] + '.' + addFnName + ':' + eventName;\n        var data = {\n            target: target,\n            eventName: eventName,\n            name: eventName,\n            useCapturing: useCapturing,\n            handler: handler\n        };\n        zone.scheduleEventTask(source, delegate, data, scheduleEventListener, cancelEventListener);\n    };\n}\nfunction makeZoneAwareRemoveListener(fnName, useCapturingParam) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    var symbol = zoneSymbol(fnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    return function zoneAwareRemoveListener(self, args) {\n        var eventName = args[0];\n        var handler = args[1];\n        var useCapturing = args[2] || defaultUseCapturing;\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n        // see https://github.com/angular/zone.js/issues/190\n        var target = self || _global$1;\n        var eventTask = findExistingRegisteredTask(target, handler, eventName, useCapturing, true);\n        if (eventTask) {\n            eventTask.zone.cancelTask(eventTask);\n        }\n        else {\n            target[symbol](eventName, handler, useCapturing);\n        }\n    };\n}\n\nvar zoneAwareAddEventListener = makeZoneAwareAddListener(ADD_EVENT_LISTENER, REMOVE_EVENT_LISTENER);\nvar zoneAwareRemoveEventListener = makeZoneAwareRemoveListener(REMOVE_EVENT_LISTENER);\nfunction patchEventTargetMethods(obj) {\n    if (obj && obj.addEventListener) {\n        patchMethod(obj, ADD_EVENT_LISTENER, function () { return zoneAwareAddEventListener; });\n        patchMethod(obj, REMOVE_EVENT_LISTENER, function () { return zoneAwareRemoveEventListener; });\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nvar originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    var OriginalClass = _global$1[className];\n    if (!OriginalClass)\n        return;\n    _global$1[className] = function () {\n        var a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    var instance = new OriginalClass(function () { });\n    var prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global$1[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                Object.defineProperty(_global$1[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = Zone.current.wrap(fn, className + '.' + prop);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global$1[className][prop] = OriginalClass[prop];\n        }\n    }\n}\n\nfunction createNamedFn(name, delegate) {\n    try {\n        return (Function('f', \"return function \" + name + \"(){return f(this, arguments)}\"))(delegate);\n    }\n    catch (e) {\n        // if we fail, we must be CSP, just return delegate.\n        return function () {\n            return delegate(this, arguments);\n        };\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    var proto = target;\n    while (proto && Object.getOwnPropertyNames(proto).indexOf(name) === -1) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    var delegateName = zoneSymbol(name);\n    var delegate;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        proto[name] = createNamedFn(name, patchFn(delegate, delegateName, name));\n    }\n    return delegate;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    var setNative = null;\n    var clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    var tasksByHandleId = {};\n    function scheduleTask(task) {\n        var data = task.data;\n        data.args[0] = function () {\n            task.invoke.apply(this, arguments);\n            delete tasksByHandleId[data.handleId];\n        };\n        data.handleId = setNative.apply(window, data.args);\n        tasksByHandleId[data.handleId] = task;\n        return task;\n    }\n    function clearTask(task) {\n        delete tasksByHandleId[task.data.handleId];\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var zone = Zone.current;\n                var options = {\n                    handleId: null,\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\n                    args: args\n                };\n                var task = zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                var handle = task.data.handleId;\n                if (handle.ref && handle.unref) {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        }; });\n    clearNative =\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n            var task = typeof args[0] === 'number' ? tasksByHandleId[args[0]] : args[0];\n            if (task && typeof task.type === 'string') {\n                if (task.cancelFn && task.data.isPeriodic || task.runCount === 0) {\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * This is necessary for Chrome and Chrome mobile, to enable\n * things like redefining `createdCallback` on an element.\n */\nvar _defineProperty = Object[zoneSymbol('defineProperty')] = Object.defineProperty;\nvar _getOwnPropertyDescriptor = Object[zoneSymbol('getOwnPropertyDescriptor')] =\n    Object.getOwnPropertyDescriptor;\nvar _create = Object.create;\nvar unconfigurablesKey = zoneSymbol('unconfigurables');\nfunction propertyPatch() {\n    Object.defineProperty = function (obj, prop, desc) {\n        if (isUnconfigurable(obj, prop)) {\n            throw new TypeError('Cannot assign to read only property \\'' + prop + '\\' of ' + obj);\n        }\n        var originalConfigurableFlag = desc.configurable;\n        if (prop !== 'prototype') {\n            desc = rewriteDescriptor(obj, prop, desc);\n        }\n        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n    };\n    Object.defineProperties = function (obj, props) {\n        Object.keys(props).forEach(function (prop) {\n            Object.defineProperty(obj, prop, props[prop]);\n        });\n        return obj;\n    };\n    Object.create = function (obj, proto) {\n        if (typeof proto === 'object' && !Object.isFrozen(proto)) {\n            Object.keys(proto).forEach(function (prop) {\n                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);\n            });\n        }\n        return _create(obj, proto);\n    };\n    Object.getOwnPropertyDescriptor = function (obj, prop) {\n        var desc = _getOwnPropertyDescriptor(obj, prop);\n        if (isUnconfigurable(obj, prop)) {\n            desc.configurable = false;\n        }\n        return desc;\n    };\n}\n\nfunction _redefineProperty(obj, prop, desc) {\n    var originalConfigurableFlag = desc.configurable;\n    desc = rewriteDescriptor(obj, prop, desc);\n    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n}\n\nfunction isUnconfigurable(obj, prop) {\n    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];\n}\nfunction rewriteDescriptor(obj, prop, desc) {\n    desc.configurable = true;\n    if (!desc.configurable) {\n        if (!obj[unconfigurablesKey]) {\n            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\n        }\n        obj[unconfigurablesKey][prop] = true;\n    }\n    return desc;\n}\nfunction _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\n    try {\n        return _defineProperty(obj, prop, desc);\n    }\n    catch (e) {\n        if (desc.configurable) {\n            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\n            // retry with the original flag value\n            if (typeof originalConfigurableFlag == 'undefined') {\n                delete desc.configurable;\n            }\n            else {\n                desc.configurable = originalConfigurableFlag;\n            }\n            try {\n                return _defineProperty(obj, prop, desc);\n            }\n            catch (e) {\n                var descJson = null;\n                try {\n                    descJson = JSON.stringify(desc);\n                }\n                catch (e) {\n                    descJson = descJson.toString();\n                }\n                console.log(\"Attempting to configure '\" + prop + \"' with descriptor '\" + descJson + \"' on object '\" + obj + \"' and got error, giving up: \" + e);\n            }\n        }\n        else {\n            throw e;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';\nvar NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex'\n    .split(',');\nvar EVENT_TARGET = 'EventTarget';\nfunction eventTargetPatch(_global) {\n    var apis = [];\n    var isWtf = _global['wtf'];\n    if (isWtf) {\n        // Workaround for: https://github.com/google/tracing-framework/issues/555\n        apis = WTF_ISSUE_555.split(',').map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);\n    }\n    else if (_global[EVENT_TARGET]) {\n        apis.push(EVENT_TARGET);\n    }\n    else {\n        // Note: EventTarget is not available in all browsers,\n        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget\n        apis = NO_EVENT_TARGET;\n    }\n    for (var i = 0; i < apis.length; i++) {\n        var type = _global[apis[i]];\n        patchEventTargetMethods(type && type.prototype);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// we have to patch the instance since the proto is non-configurable\nfunction apply(_global) {\n    var WS = _global.WebSocket;\n    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener\n    // On older Chrome, no need since EventTarget was already patched\n    if (!_global.EventTarget) {\n        patchEventTargetMethods(WS.prototype);\n    }\n    _global.WebSocket = function (a, b) {\n        var socket = arguments.length > 1 ? new WS(a, b) : new WS(a);\n        var proxySocket;\n        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance\n        var onmessageDesc = Object.getOwnPropertyDescriptor(socket, 'onmessage');\n        if (onmessageDesc && onmessageDesc.configurable === false) {\n            proxySocket = Object.create(socket);\n            ['addEventListener', 'removeEventListener', 'send', 'close'].forEach(function (propName) {\n                proxySocket[propName] = function () {\n                    return socket[propName].apply(socket, arguments);\n                };\n            });\n        }\n        else {\n            // we can patch the real socket\n            proxySocket = socket;\n        }\n        patchOnProperties(proxySocket, ['close', 'error', 'message', 'open']);\n        return proxySocket;\n    };\n    for (var prop in WS) {\n        _global.WebSocket[prop] = WS[prop];\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar eventNames = 'copy cut paste abort blur focus canplay canplaythrough change click contextmenu dblclick drag dragend dragenter dragleave dragover dragstart drop durationchange emptied ended input invalid keydown keypress keyup load loadeddata loadedmetadata loadstart message mousedown mouseenter mouseleave mousemove mouseout mouseover mouseup pause play playing progress ratechange reset scroll seeked seeking select show stalled submit suspend timeupdate volumechange waiting mozfullscreenchange mozfullscreenerror mozpointerlockchange mozpointerlockerror error webglcontextrestored webglcontextlost webglcontextcreationerror'\n    .split(' ');\nfunction propertyDescriptorPatch(_global) {\n    if (isNode) {\n        return;\n    }\n    var supportsWebSocket = typeof WebSocket !== 'undefined';\n    if (canPatchViaPropertyDescriptor()) {\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            patchOnProperties(HTMLElement.prototype, eventNames);\n        }\n        patchOnProperties(XMLHttpRequest.prototype, null);\n        if (typeof IDBIndex !== 'undefined') {\n            patchOnProperties(IDBIndex.prototype, null);\n            patchOnProperties(IDBRequest.prototype, null);\n            patchOnProperties(IDBOpenDBRequest.prototype, null);\n            patchOnProperties(IDBDatabase.prototype, null);\n            patchOnProperties(IDBTransaction.prototype, null);\n            patchOnProperties(IDBCursor.prototype, null);\n        }\n        if (supportsWebSocket) {\n            patchOnProperties(WebSocket.prototype, null);\n        }\n    }\n    else {\n        // Safari, Android browsers (Jelly Bean)\n        patchViaCapturingAllTheEvents();\n        patchClass('XMLHttpRequest');\n        if (supportsWebSocket) {\n            apply(_global);\n        }\n    }\n}\nfunction canPatchViaPropertyDescriptor() {\n    if (isBrowser && !Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&\n        typeof Element !== 'undefined') {\n        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364\n        // IDL interface attributes are not configurable\n        var desc = Object.getOwnPropertyDescriptor(Element.prototype, 'onclick');\n        if (desc && !desc.configurable)\n            return false;\n    }\n    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {\n        get: function () {\n            return true;\n        }\n    });\n    var req = new XMLHttpRequest();\n    var result = !!req.onreadystatechange;\n    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {});\n    return result;\n}\n\nvar unboundKey = zoneSymbol('unbound');\n// Whenever any eventListener fires, we check the eventListener target and all parents\n// for `onwhatever` properties and replace them with zone-bound functions\n// - Chrome (for now)\nfunction patchViaCapturingAllTheEvents() {\n    var _loop_1 = function(i) {\n        var property = eventNames[i];\n        var onproperty = 'on' + property;\n        self.addEventListener(property, function (event) {\n            var elt = event.target, bound, source;\n            if (elt) {\n                source = elt.constructor['name'] + '.' + onproperty;\n            }\n            else {\n                source = 'unknown.' + onproperty;\n            }\n            while (elt) {\n                if (elt[onproperty] && !elt[onproperty][unboundKey]) {\n                    bound = Zone.current.wrap(elt[onproperty], source);\n                    bound[unboundKey] = elt[onproperty];\n                    elt[onproperty] = bound;\n                }\n                elt = elt.parentElement;\n            }\n        }, true);\n    };\n    for (var i = 0; i < eventNames.length; i++) {\n        _loop_1(i);\n    }\n    \n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction registerElementPatch(_global) {\n    if (!isBrowser || !('registerElement' in _global.document)) {\n        return;\n    }\n    var _registerElement = document.registerElement;\n    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];\n    document.registerElement = function (name, opts) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                var source = 'Document.registerElement::' + callback;\n                if (opts.prototype.hasOwnProperty(callback)) {\n                    var descriptor = Object.getOwnPropertyDescriptor(opts.prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = Zone.current.wrap(descriptor.value, source);\n                        _redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else {\n                        opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);\n                    }\n                }\n                else if (opts.prototype[callback]) {\n                    opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);\n                }\n            });\n        }\n        return _registerElement.apply(document, [name, opts]);\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar set = 'set';\nvar clear = 'clear';\nvar blockingMethods = ['alert', 'prompt', 'confirm'];\nvar _global = typeof window === 'object' && window || typeof self === 'object' && self || global;\npatchTimer(_global, set, clear, 'Timeout');\npatchTimer(_global, set, clear, 'Interval');\npatchTimer(_global, set, clear, 'Immediate');\npatchTimer(_global, 'request', 'cancel', 'AnimationFrame');\npatchTimer(_global, 'mozRequest', 'mozCancel', 'AnimationFrame');\npatchTimer(_global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\nfor (var i = 0; i < blockingMethods.length; i++) {\n    var name = blockingMethods[i];\n    patchMethod(_global, name, function (delegate, symbol, name) {\n        return function (s, args) {\n            return Zone.current.run(delegate, _global, args, name);\n        };\n    });\n}\neventTargetPatch(_global);\npropertyDescriptorPatch(_global);\npatchClass('MutationObserver');\npatchClass('WebKitMutationObserver');\npatchClass('FileReader');\npropertyPatch();\nregisterElementPatch(_global);\n// Treat XMLHTTPRequest as a macrotask.\npatchXHR(_global);\nvar XHR_TASK = zoneSymbol('xhrTask');\nvar XHR_SYNC = zoneSymbol('xhrSync');\nfunction patchXHR(window) {\n    function findPendingTask(target) {\n        var pendingTask = target[XHR_TASK];\n        return pendingTask;\n    }\n    function scheduleTask(task) {\n        var data = task.data;\n        data.target.addEventListener('readystatechange', function () {\n            if (data.target.readyState === data.target.DONE) {\n                if (!data.aborted) {\n                    task.invoke();\n                }\n            }\n        });\n        var storedTask = data.target[XHR_TASK];\n        if (!storedTask) {\n            data.target[XHR_TASK] = task;\n        }\n        sendNative.apply(data.target, data.args);\n        return task;\n    }\n    function placeholderCallback() { }\n    function clearTask(task) {\n        var data = task.data;\n        // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n        // to prevent it from firing. So instead, we store info for the event listener.\n        data.aborted = true;\n        return abortNative.apply(data.target, data.args);\n    }\n    var openNative = patchMethod(window.XMLHttpRequest.prototype, 'open', function () { return function (self, args) {\n        self[XHR_SYNC] = args[2] == false;\n        return openNative.apply(self, args);\n    }; });\n    var sendNative = patchMethod(window.XMLHttpRequest.prototype, 'send', function () { return function (self, args) {\n        var zone = Zone.current;\n        if (self[XHR_SYNC]) {\n            // if the XHR is sync there is no task to schedule, just execute the code.\n            return sendNative.apply(self, args);\n        }\n        else {\n            var options = { target: self, isPeriodic: false, delay: null, args: args, aborted: false };\n            return zone.scheduleMacroTask('XMLHttpRequest.send', placeholderCallback, options, scheduleTask, clearTask);\n        }\n    }; });\n    var abortNative = patchMethod(window.XMLHttpRequest.prototype, 'abort', function (delegate) { return function (self, args) {\n        var task = findPendingTask(self);\n        if (task && typeof task.type == 'string') {\n            // If the XHR has already completed, do nothing.\n            if (task.cancelFn == null) {\n                return;\n            }\n            task.zone.cancelTask(task);\n        }\n        // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no task\n        // to cancel. Do nothing.\n    }; });\n}\n/// GEO_LOCATION\nif (_global['navigator'] && _global['navigator'].geolocation) {\n    patchPrototype(_global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n}\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zone.js/dist/zone.js\n// module id = 34\n// module chunks = 1","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 35\n// module chunks = 1"],"sourceRoot":""}